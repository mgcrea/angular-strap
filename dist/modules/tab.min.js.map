{"version":3,"sources":["tab/tab.js"],"names":[],"mappings":"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","file":"tab.min.js","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.tab', [])\n\n  .provider('$tab', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      template: 'tab/tab.tpl.html',\n      navClass: 'nav-tabs',\n      activeClass: 'active'\n    };\n\n    var controller = this.controller = function($scope, $element, $attrs) {\n      var self = this;\n\n      // Attributes options\n      self.$options = angular.copy(defaults);\n      angular.forEach(['animation', 'navClass', 'activeClass'], function(key) {\n        if(angular.isDefined($attrs[key])) self.$options[key] = $attrs[key];\n      });\n\n      // Publish options on scope\n      $scope.$navClass = self.$options.navClass;\n      $scope.$activeClass = self.$options.activeClass;\n\n      self.$panes = $scope.$panes = [];\n\n      // DEPRECATED: $viewChangeListeners, please use $activePaneChangeListeners\n      // Because we deprecated ngModel usage, we rename viewChangeListeners to \n      // activePaneChangeListeners to make more sense.\n      self.$activePaneChangeListeners = self.$viewChangeListeners = [];\n\n      self.$push = function(pane) {\n        self.$panes.push(pane);\n      };\n\n      self.$remove = function(pane) {\n        var index = self.$panes.indexOf(pane);\n        var activeIndex = self.$panes.$active;\n\n        // remove pane from $panes array\n        self.$panes.splice(index, 1);\n\n        if (index < activeIndex) {\n          // we removed a pane before the active pane, so we need to \n          // decrement the active pane index\n          activeIndex--;\n        }\n        else if (index === activeIndex && activeIndex === self.$panes.length) {\n          // we remove the active pane and it was the one at the end,\n          // so select the previous one\n          activeIndex--;\n        }\n        self.$setActive(activeIndex);\n      };\n\n      self.$panes.$active = 0;\n      self.$setActive = $scope.$setActive = function(value) {\n        self.$panes.$active = value;\n        self.$activePaneChangeListeners.forEach(function(fn) {\n          fn();\n        });\n      };\n\n    };\n\n    this.$get = function() {\n      var $tab = {};\n      $tab.defaults = defaults;\n      $tab.controller = controller;\n      return $tab;\n    };\n\n  })\n\n  .directive('bsTabs', function($window, $animate, $tab, $parse) {\n\n    var defaults = $tab.defaults;\n\n    return {\n      require: ['?ngModel', 'bsTabs'],\n      transclude: true,\n      scope: true,\n      controller: ['$scope', '$element', '$attrs', $tab.controller],\n      templateUrl: function(element, attr) {\n        return attr.template || defaults.template;\n      },\n      link: function postLink(scope, element, attrs, controllers) {\n\n        var ngModelCtrl = controllers[0];\n        var bsTabsCtrl = controllers[1];\n\n        // DEPRECATED: ngModel, please use bsActivePane\n        // 'ngModel' is deprecated bacause if interferes with form validation\n        // and status, so avoid using it here.\n        if(ngModelCtrl) {\n          console.warn('Usage of ngModel is deprecated, please use bsActivePane instead!');\n\n          // Update the modelValue following\n          bsTabsCtrl.$activePaneChangeListeners.push(function() {\n            ngModelCtrl.$setViewValue(bsTabsCtrl.$panes.$active);\n          });\n\n          // modelValue -> $formatters -> viewValue\n          ngModelCtrl.$formatters.push(function(modelValue) {\n            // console.warn('$formatter(\"%s\"): modelValue=%o (%o)', element.attr('ng-model'), modelValue, typeof modelValue);\n            bsTabsCtrl.$setActive(modelValue * 1);\n            return modelValue;\n          });\n\n        }\n\n        if (attrs.bsActivePane) {\n          // adapted from angularjs ngModelController bindings\n          // https://github.com/angular/angular.js/blob/v1.3.1/src%2Fng%2Fdirective%2Finput.js#L1730\n          var parsedBsActivePane = $parse(attrs.bsActivePane);\n\n          // Update bsActivePane value with change\n          bsTabsCtrl.$activePaneChangeListeners.push(function() {\n            parsedBsActivePane.assign(scope, bsTabsCtrl.$panes.$active);\n          });\n\n          // watch bsActivePane for value changes\n          scope.$watch(attrs.bsActivePane, function(newValue, oldValue) {\n            bsTabsCtrl.$setActive(newValue * 1);\n          }, true);\n        }\n      }\n    };\n\n  })\n\n  .directive('bsPane', function($window, $animate, $sce) {\n\n    return {\n      require: ['^?ngModel', '^bsTabs'],\n      scope: true,\n      link: function postLink(scope, element, attrs, controllers) {\n\n        var ngModelCtrl = controllers[0];\n        var bsTabsCtrl = controllers[1];\n\n        // Add base class\n        element.addClass('tab-pane');\n\n        // Observe title attribute for change\n        attrs.$observe('title', function(newValue, oldValue) {\n          scope.title = $sce.trustAsHtml(newValue);\n        });\n\n        // Add animation class\n        if(bsTabsCtrl.$options.animation) {\n          element.addClass(bsTabsCtrl.$options.animation);\n        }\n\n        attrs.$observe('disabled', function(newValue, oldValue) {\n          scope.disabled = scope.$eval(newValue);\n        });\n\n        // Push pane to parent bsTabs controller\n        bsTabsCtrl.$push(scope);\n\n        // remove pane from tab controller when pane is destroyed\n        scope.$on('$destroy', function() {\n          bsTabsCtrl.$remove(scope);\n        });\n\n        function render() {\n          var index = bsTabsCtrl.$panes.indexOf(scope);\n          var active = bsTabsCtrl.$panes.$active;\n          $animate[index === active ? 'addClass' : 'removeClass'](element, bsTabsCtrl.$options.activeClass);\n        }\n\n        bsTabsCtrl.$activePaneChangeListeners.push(function() {\n          render();\n        });\n        render();\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}