{"version":3,"sources":["tab/tab.js"],"names":["angular","module","run","$templateCache","put","provider","defaults","this","animation","template","base-class","$get","directive","$window","$animate","$tab","restrict","scope","require","templateUrl","element","attr","link","controller","options","forEach","key","isDefined","bsTabs","$watch","newValue","panes","addClass","active","activePane","setActive","index","$setViewValue","$render","$modelValue"],"mappings":"AAOA,YACAA,SAAQC,OAAO,yBAA0BC,KACvC,iBACA,SAAUC,GACRA,EAAeC,IAAI,QAAS,uBAE7BC,SAAS,OAAQ,WAClB,GAAIC,GAAWC,KAAKD,UAChBE,UAAW,UACXC,SAAU,mBACVC,aAAc,OAElBH,MAAKI,KAAO,WACV,OAASL,SAAUA,MAEpBM,UAAU,UACX,UACA,WACA,OACA,SAAUC,EAASC,EAAUC,GAC3B,GAAIT,GAAWS,EAAKT,QACpB,QACEU,SAAU,MACVC,OAAO,EACPC,QAAS,WACTC,YAAa,SAAUC,EAASC,GAC9B,MAAOA,GAAKZ,UAAYH,EAASG,UAEnCa,KAAM,SAAkBL,EAAOG,EAASC,EAAME,GAE5C,GAAIC,GAAUlB,CACdN,SAAQyB,SAAS,aAAc,SAAUC,GACnC1B,QAAQ2B,UAAUN,EAAKK,MACzBF,EAAQE,GAAOL,EAAKK,MAGxBL,EAAKO,QAAUX,EAAMY,OAAOR,EAAKO,OAAQ,SAAUE,GACjDb,EAAMc,MAAQD,IACb,GAEHV,EAAQY,SAAS1B,EAAS,eAEtBkB,EAAQhB,WACVY,EAAQY,SAASR,EAAQhB,WAE3BS,EAAMgB,OAAShB,EAAMiB,WAAa,EAElCjB,EAAMkB,UAAY,SAAUC,GAC1BnB,EAAMgB,OAASG,EACXb,GACFA,EAAWc,cAAcD,IAIzBb,IACFA,EAAWe,QAAU,WACnBrB,EAAMgB,OAAkC,EAAzBV,EAAWgB","file":"tab.min.js","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.tab', [])\n\n  .run(function($templateCache) {\n\n    $templateCache.put('$pane', '{{pane.content}}');\n\n  })\n\n  .provider('$tab', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      template: 'tab/tab.tpl.html',\n      'base-class': 'tabs'\n    };\n\n    this.$get = function() {\n      return {defaults: defaults};\n    };\n\n  })\n\n  .directive('bsTabs', function($window, $animate, $tab) {\n\n    var defaults = $tab.defaults;\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      require: '?ngModel',\n      templateUrl: function(element, attr) {\n        return attr.template || defaults.template;\n      },\n      link: function postLink(scope, element, attr, controller) {\n\n        // Directive options\n        var options = defaults;\n        angular.forEach(['animation'/*, 'template'*/], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Require scope as an object\n        attr.bsTabs && scope.$watch(attr.bsTabs, function(newValue, oldValue) {\n          scope.panes = newValue;\n        }, true);\n\n        // Add base class\n        element.addClass(defaults['base-class']);\n\n        // Support animations\n        if(options.animation) {\n          element.addClass(options.animation);\n        }\n\n        scope.active = scope.activePane = 0;\n        // view -> model\n        scope.setActive = function(index, ev) {\n          scope.active = index;\n          if(controller) {\n            controller.$setViewValue(index);\n          }\n        };\n\n        // model -> view\n        if(controller) {\n          controller.$render = function() {\n            scope.active = controller.$modelValue * 1;\n          };\n        }\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}