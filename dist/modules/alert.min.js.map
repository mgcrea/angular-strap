{"version":3,"sources":["alert/alert.js"],"names":["angular","module","provider","defaults","this","animation","prefixClass","placement","template","container","element","backdrop","keyboard","show","duration","type","dismissable","$get","$modal","$timeout","AlertFactory","config","$alert","options","extend","$scope","hide","directive","$window","$location","$sce","requestAnimationFrame","setTimeout","restrict","scope","link","attr","forEach","key","isDefined","$observe","newValue","trustAsHtml","bsAlert","$watch","isObject","content","alert","on","trigger","toggle","$on","destroy"],"mappings":"AAOA,YAIAA,SAAQC,OAAO,wBAAyB,yBAAyBC,SAAS,SAAU,WAClF,GAAIC,GAAWC,KAAKD,UAChBE,UAAW,UACXC,YAAa,QACbC,UAAW,KACXC,SAAU,uBACVC,WAAW,EACXC,QAAS,KACTC,UAAU,EACVC,UAAU,EACVC,MAAM,EACNC,UAAU,EACVC,MAAM,EACNC,aAAa,EAEjBZ,MAAKa,MACH,SACA,WACA,SAAUC,EAAQC,GAChB,QAASC,GAAaC,GACpB,GAAIC,MAEAC,EAAUvB,QAAQwB,UAAWrB,EAAUkB,EAC3CC,GAASJ,EAAOK,GAEhBD,EAAOG,OAAOT,cAAgBO,EAAQP,YAClCO,EAAQR,OACVO,EAAOG,OAAOV,KAAOQ,EAAQR,KAG/B,IAAIF,GAAOS,EAAOT,IASlB,OARIU,GAAQT,WACVQ,EAAOT,KAAO,WACZA,IACAM,EAAS,WACPG,EAAOI,QACa,IAAnBH,EAAQT,YAGRQ,EAET,MAAOF,OAGVO,UAAU,WACX,UACA,YACA,OACA,SACA,SAAUC,EAASC,EAAWC,EAAMR,GACNM,EAAQG,uBAAyBH,EAAQI,UACrE,QACEC,SAAU,MACVC,OAAO,EACPC,KAAM,SAAkBD,EAAOxB,EAAS0B,GAEtC,GAAIb,IACAW,MAAOA,EACPxB,QAASA,EACTG,MAAM,EAEVb,SAAQqC,SACN,WACA,YACA,WACA,OACA,YACA,YACA,WACA,eACC,SAAUC,GACPtC,QAAQuC,UAAUH,EAAKE,MACzBf,EAAQe,GAAOF,EAAKE,MAGxBtC,QAAQqC,SACN,QACA,UACA,QACC,SAAUC,GACXF,EAAKE,IAAQF,EAAKI,SAASF,EAAK,SAAUG,GACxCP,EAAMI,GAAOR,EAAKY,YAAYD,OAIlCL,EAAKO,SAAWT,EAAMU,OAAOR,EAAKO,QAAS,SAAUF,GAC/CzC,QAAQ6C,SAASJ,GACnBzC,QAAQwB,OAAOU,EAAOO,GAEtBP,EAAMY,QAAUL,IAEjB,EAEH,IAAIM,GAAQzB,EAAOC,EAEnBb,GAAQsC,GAAGZ,EAAKa,SAAW,QAASF,EAAMG,QAE1ChB,EAAMiB,IAAI,WAAY,WACpBJ,EAAMK,UACN7B,EAAU,KACVwB,EAAQ","file":"alert.min.js","sourcesContent":["'use strict';\n\n// @BUG: following snippet won't compile correctly\n// @TODO: submit issue to core\n// '<span ng-if=\"title\"><strong ng-bind=\"title\"></strong>&nbsp;</span><span ng-bind-html=\"content\"></span>' +\n\nangular.module('mgcrea.ngStrap.alert', ['mgcrea.ngStrap.modal'])\n\n  .provider('$alert', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'alert',\n      placement: null,\n      template: 'alert/alert.tpl.html',\n      container: false,\n      element: null,\n      backdrop: false,\n      keyboard: true,\n      show: true,\n      // Specific options\n      duration: false,\n      type: false,\n      dismissable: true\n    };\n\n    this.$get = function($modal, $timeout) {\n\n      function AlertFactory(config) {\n\n        var $alert = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $alert = $modal(options);\n\n        // Support scope as string options [/*title, content, */ type, dismissable]\n        $alert.$scope.dismissable = !!options.dismissable;\n        if(options.type) {\n          $alert.$scope.type = options.type;\n        }\n\n        // Support auto-close duration\n        var show = $alert.show;\n        if(options.duration) {\n          $alert.show = function() {\n            show();\n            $timeout(function() {\n              $alert.hide();\n            }, options.duration * 1000);\n          };\n        }\n\n        return $alert;\n\n      }\n\n      return AlertFactory;\n\n    };\n\n  })\n\n  .directive('bsAlert', function($window, $location, $sce, $alert) {\n\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope, element: element, show: false};\n        angular.forEach(['template', 'placement', 'keyboard', 'html', 'container', 'animation', 'duration', 'dismissable'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content', 'type'], function(key) {\n          attr[key] && attr.$observe(key, function(newValue, oldValue) {\n            scope[key] = $sce.trustAsHtml(newValue);\n          });\n        });\n\n        // Support scope as an object\n        attr.bsAlert && scope.$watch(attr.bsAlert, function(newValue, oldValue) {\n          if(angular.isObject(newValue)) {\n            angular.extend(scope, newValue);\n          } else {\n            scope.content = newValue;\n          }\n        }, true);\n\n        // Initialize alert\n        var alert = $alert(options);\n\n        // Trigger\n        element.on(attr.trigger || 'click', alert.toggle);\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          alert.destroy();\n          options = null;\n          alert = null;\n        });\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}