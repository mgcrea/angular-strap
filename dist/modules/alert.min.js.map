{"version":3,"sources":["alert/alert.js"],"names":[],"mappings":"AAAA;;;;;;AAMA,QAAQ,OAAO,wBAAwB,CAAC;;GAErC,SAAS,UAAU,WAAW;;IAE7B,IAAI,WAAW,KAAK,WAAW;MAC7B,WAAW;MACX,aAAa;MACb,aAAa;MACb,WAAW;MACX,UAAU;MACV,WAAW;MACX,SAAS;MACT,UAAU;MACV,UAAU;MACV,MAAM;;MAEN,UAAU;MACV,MAAM;MACN,aAAa;;;IAGf,KAAK,8BAAO,SAAS,QAAQ,UAAU;;MAErC,SAAS,aAAa,QAAQ;;QAE5B,IAAI,SAAS;;;QAGb,IAAI,UAAU,QAAQ,OAAO,IAAI,UAAU;;QAE3C,SAAS,OAAO;;;QAGhB,OAAO,OAAO,cAAc,CAAC,CAAC,QAAQ;QACtC,GAAG,QAAQ,MAAM;UACf,OAAO,OAAO,OAAO,QAAQ;;;;QAI/B,IAAI,OAAO,OAAO;QAClB,GAAG,QAAQ,UAAU;UACnB,OAAO,OAAO,WAAW;YACvB;YACA,SAAS,WAAW;cAClB,OAAO;eACN,QAAQ,WAAW;;;;QAI1B,OAAO;;;;MAIT,OAAO;;;;;;GAMV,UAAU,yCAAW,SAAS,SAAS,MAAM,QAAQ;;IAEpD,IAAI,wBAAwB,QAAQ,yBAAyB,QAAQ;;IAErE,OAAO;MACL,UAAU;MACV,OAAO;MACP,MAAM,SAAS,SAAS,OAAO,SAAS,MAAM,cAAc;;;QAG1D,IAAI,UAAU,CAAC,OAAO,OAAO,SAAS,SAAS,MAAM;QACrD,QAAQ,QAAQ,CAAC,YAAY,aAAa,YAAY,QAAQ,aAAa,aAAa,YAAY,gBAAgB,SAAS,KAAK;UAChI,GAAG,QAAQ,UAAU,KAAK,OAAO,QAAQ,OAAO,KAAK;;;;;QAKvD,IAAI,CAAC,MAAM,eAAe,SAAS;UACjC,MAAM,QAAQ;;;;QAIhB,QAAQ,QAAQ,CAAC,SAAS,WAAW,SAAS,SAAS,KAAK;UAC1D,KAAK,QAAQ,KAAK,SAAS,KAAK,SAAS,UAAU,UAAU;YAC3D,MAAM,OAAO,KAAK,YAAY;;;;;QAKlC,KAAK,WAAW,MAAM,OAAO,KAAK,SAAS,SAAS,UAAU,UAAU;UACtE,GAAG,QAAQ,SAAS,WAAW;YAC7B,QAAQ,OAAO,OAAO;iBACjB;YACL,MAAM,UAAU;;WAEjB;;;QAGH,IAAI,QAAQ,OAAO;;;QAGnB,QAAQ,GAAG,KAAK,WAAW,SAAS,MAAM;;;QAG1C,MAAM,IAAI,YAAY,WAAW;UAC/B,IAAI,OAAO,MAAM;UACjB,UAAU;UACV,QAAQ;;;;;;;AAOlB","file":"alert.min.js","sourcesContent":["'use strict';\n\n// @BUG: following snippet won't compile correctly\n// @TODO: submit issue to core\n// '<span ng-if=\"title\"><strong ng-bind=\"title\"></strong>&nbsp;</span><span ng-bind-html=\"content\"></span>' +\n\nangular.module('mgcrea.ngStrap.alert', ['mgcrea.ngStrap.modal'])\n\n  .provider('$alert', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'alert',\n      prefixEvent: 'alert',\n      placement: null,\n      template: 'alert/alert.tpl.html',\n      container: false,\n      element: null,\n      backdrop: false,\n      keyboard: true,\n      show: true,\n      // Specific options\n      duration: false,\n      type: false,\n      dismissable: true\n    };\n\n    this.$get = function($modal, $timeout) {\n\n      function AlertFactory(config) {\n\n        var $alert = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $alert = $modal(options);\n\n        // Support scope as string options [/*title, content, */ type, dismissable]\n        $alert.$scope.dismissable = !!options.dismissable;\n        if(options.type) {\n          $alert.$scope.type = options.type;\n        }\n\n        // Support auto-close duration\n        var show = $alert.show;\n        if(options.duration) {\n          $alert.show = function() {\n            show();\n            $timeout(function() {\n              $alert.hide();\n            }, options.duration * 1000);\n          };\n        }\n\n        return $alert;\n\n      }\n\n      return AlertFactory;\n\n    };\n\n  })\n\n  .directive('bsAlert', function($window, $sce, $alert) {\n\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope, element: element, show: false};\n        angular.forEach(['template', 'placement', 'keyboard', 'html', 'container', 'animation', 'duration', 'dismissable'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // overwrite inherited title value when no value specified\n        // fix for angular 1.3.1 531a8de72c439d8ddd064874bf364c00cedabb11\n        if (!scope.hasOwnProperty('title')){\n          scope.title = '';\n        }\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content', 'type'], function(key) {\n          attr[key] && attr.$observe(key, function(newValue, oldValue) {\n            scope[key] = $sce.trustAsHtml(newValue);\n          });\n        });\n\n        // Support scope as an object\n        attr.bsAlert && scope.$watch(attr.bsAlert, function(newValue, oldValue) {\n          if(angular.isObject(newValue)) {\n            angular.extend(scope, newValue);\n          } else {\n            scope.content = newValue;\n          }\n        }, true);\n\n        // Initialize alert\n        var alert = $alert(options);\n\n        // Trigger\n        element.on(attr.trigger || 'click', alert.toggle);\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (alert) alert.destroy();\n          options = null;\n          alert = null;\n        });\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}