{"version":3,"sources":["popover/popover.js"],"names":[],"mappings":"AAAA;;AAEA,QAAQ,OAAO,0BAA0B,CAAC;;GAEvC,SAAS,YAAY,WAAW;;IAE/B,IAAI,WAAW,KAAK,WAAW;MAC7B,WAAW;MACX,aAAa;MACb,WAAW;MACX,QAAQ;MACR,WAAW;MACX,UAAU;MACV,iBAAiB;MACjB,SAAS;MACT,UAAU;MACV,MAAM;MACN,OAAO;MACP,SAAS;MACT,OAAO;MACP,WAAW;;;IAGb,KAAK,oBAAO,SAAS,UAAU;;MAE7B,SAAS,eAAe,SAAS,QAAQ;;;QAGvC,IAAI,UAAU,QAAQ,OAAO,IAAI,UAAU;;QAE3C,IAAI,WAAW,SAAS,SAAS;;;QAGjC,GAAG,QAAQ,SAAS;UAClB,SAAS,OAAO,UAAU,QAAQ;;;QAGpC,OAAO;;;;MAIT,OAAO;;;;;;GAMV,UAAU,6CAAa,SAAS,SAAS,MAAM,UAAU;;IAExD,IAAI,wBAAwB,QAAQ,yBAAyB,QAAQ;;IAErE,OAAO;MACL,UAAU;MACV,OAAO;MACP,MAAM,SAAS,SAAS,OAAO,SAAS,MAAM;;;QAG5C,IAAI,UAAU,CAAC,OAAO;QACtB,QAAQ,QAAQ,CAAC,YAAY,mBAAmB,aAAa,aAAa,UAAU,SAAS,WAAW,YAAY,QAAQ,aAAa,eAAe,aAAa,OAAO,SAAS,KAAK;UACxL,GAAG,QAAQ,UAAU,KAAK,OAAO,QAAQ,OAAO,KAAK;;;;QAIvD,QAAQ,QAAQ,CAAC,SAAS,YAAY,SAAS,KAAK;UAClD,KAAK,QAAQ,KAAK,SAAS,KAAK,SAAS,UAAU,UAAU;YAC3D,MAAM,OAAO,KAAK,YAAY;YAC9B,QAAQ,UAAU,aAAa,sBAAsB,WAAW;cAC9D,WAAW,QAAQ;;;;;;QAMzB,KAAK,aAAa,MAAM,OAAO,KAAK,WAAW,SAAS,UAAU,UAAU;UAC1E,GAAG,QAAQ,SAAS,WAAW;YAC7B,QAAQ,OAAO,OAAO;iBACjB;YACL,MAAM,UAAU;;UAElB,QAAQ,UAAU,aAAa,sBAAsB,WAAW;YAC9D,WAAW,QAAQ;;WAEpB;;;QAGH,KAAK,UAAU,MAAM,OAAO,KAAK,QAAQ,SAAS,UAAU,UAAU;UACpE,GAAG,CAAC,WAAW,CAAC,QAAQ,UAAU,WAAW;UAC7C,GAAG,QAAQ,SAAS,WAAW,WAAW,CAAC,CAAC,SAAS,MAAM;UAC3D,aAAa,OAAO,QAAQ,SAAS,QAAQ;;;;QAI/C,KAAK,YAAY,MAAM,OAAO,KAAK,UAAU,UAAU,UAAU;UAC/D,GAAG,CAAC,WAAW,CAAC,QAAQ,UAAU,WAAW;UAC7C,QAAQ,YAAY;;;;QAItB,IAAI,UAAU,SAAS,SAAS;;;QAGhC,MAAM,IAAI,YAAY,WAAW;UAC/B,IAAI,SAAS,QAAQ;UACrB,UAAU;UACV,UAAU;;;;;;;AAOpB","file":"popover.min.js","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.popover', ['mgcrea.ngStrap.tooltip'])\n\n  .provider('$popover', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      customClass: '',\n      container: false,\n      target: false,\n      placement: 'right',\n      template: 'popover/popover.tpl.html',\n      contentTemplate: false,\n      trigger: 'click',\n      keyboard: true,\n      html: false,\n      title: '',\n      content: '',\n      delay: 0,\n      autoClose: false\n    };\n\n    this.$get = function($tooltip) {\n\n      function PopoverFactory(element, config) {\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        var $popover = $tooltip(element, options);\n\n        // Support scope as string options [/*title, */content]\n        if(options.content) {\n          $popover.$scope.content = options.content;\n        }\n\n        return $popover;\n\n      }\n\n      return PopoverFactory;\n\n    };\n\n  })\n\n  .directive('bsPopover', function($window, $sce, $popover) {\n\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr) {\n\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['template', 'contentTemplate', 'placement', 'container', 'target', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'customClass', 'autoClose', 'id'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content'], function(key) {\n          attr[key] && attr.$observe(key, function(newValue, oldValue) {\n            scope[key] = $sce.trustAsHtml(newValue);\n            angular.isDefined(oldValue) && requestAnimationFrame(function() {\n              popover && popover.$applyPlacement();\n            });\n          });\n        });\n\n        // Support scope as an object\n        attr.bsPopover && scope.$watch(attr.bsPopover, function(newValue, oldValue) {\n          if(angular.isObject(newValue)) {\n            angular.extend(scope, newValue);\n          } else {\n            scope.content = newValue;\n          }\n          angular.isDefined(oldValue) && requestAnimationFrame(function() {\n            popover && popover.$applyPlacement();\n          });\n        }, true);\n\n        // Visibility binding support\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if(!popover || !angular.isDefined(newValue)) return;\n          if(angular.isString(newValue)) newValue = !!newValue.match(/true|,?(popover),?/i);\n          newValue === true ? popover.show() : popover.hide();\n        });\n        \n        // Viewport support\n        attr.viewport && scope.$watch(attr.viewport, function (newValue) {\n          if(!popover || !angular.isDefined(newValue)) return;\n          popover.setViewport(newValue);\n        });\n\n        // Initialize popover\n        var popover = $popover(element, options);\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (popover) popover.destroy();\n          options = null;\n          popover = null;\n        });\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}