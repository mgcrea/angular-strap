{"version":3,"sources":["tooltip/tooltip.js"],"names":["angular","module","provider","defaults","this","animation","customClass","prefixClass","prefixEvent","container","target","placement","template","contentTemplate","trigger","keyboard","html","show","title","type","delay","$get","$window","$rootScope","$compile","$q","$templateCache","$http","$animate","dimensions","$$rAF","TooltipFactory","element","config","getPosition","options","offset","position","getCalculatedOffset","actualWidth","actualHeight","split","top","height","left","width","$tooltip","nodeName","toLowerCase","$options","extend","$promise","fetchTemplate","scope","$scope","$new","isString","parseFloat","$hide","$$postDigest","hide","$show","$toggle","toggle","$isShown","timeout","hoverState","then","templateEl","contentEl","findElement","length","removeAttr","outerHTML","tipLinker","tipElement","tipTemplate","tipContainer","isObject","data","replace","htmlReplaceRegExp","trim","apply","init","isNumber","isElement","triggers","forEach","on","enter","leave","isTouch","$onFocusElementMouseDown","focus","destroy","i","off","remove","clearTimeout","$destroy","setTimeout","$emit","parent","after","$element","css","display","visibility","addClass","$$phase","$root","$digest","$applyPlacement","$onKeyUp","$onFocusKeyUp","blur","elementPosition","tipWidth","prop","tipHeight","tipPosition","evt","which","preventDefault","stopPropagation","query","document","querySelectorAll","when","get","res","put","String","prototype","directive","$location","$sce","restrict","link","attr","key","isDefined","$observe","newValue","oldValue","trustAsHtml","tooltip","bsTooltip","$watch","bsShow","match","$on"],"mappings":"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","file":"tooltip.min.js","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.tooltip', ['mgcrea.ngStrap.helpers.dimensions'])\n\n  .provider('$tooltip', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      customClass: '',\n      prefixClass: 'tooltip',\n      prefixEvent: 'tooltip',\n      container: false,\n      target: false,\n      placement: 'top',\n      template: 'tooltip/tooltip.tpl.html',\n      contentTemplate: false,\n      trigger: 'hover focus',\n      keyboard: false,\n      html: false,\n      show: false,\n      title: '',\n      type: '',\n      delay: 0\n    };\n\n    this.$get = function($window, $rootScope, $compile, $q, $templateCache, $http, $animate, dimensions, $$rAF) {\n\n      var trim = String.prototype.trim;\n      var isTouch = 'createTouch' in $window.document;\n      var htmlReplaceRegExp = /ng-bind=\"/ig;\n\n      function TooltipFactory(element, config) {\n\n        var $tooltip = {};\n\n        // Common vars\n        var nodeName = element[0].nodeName.toLowerCase();\n        var options = $tooltip.$options = angular.extend({}, defaults, config);\n        $tooltip.$promise = fetchTemplate(options.template);\n        var scope = $tooltip.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n        if(options.delay && angular.isString(options.delay)) {\n          options.delay = parseFloat(options.delay);\n        }\n\n        // Support scope as string options\n        if(options.title) {\n          $tooltip.$scope.title = options.title;\n        }\n\n        // Provide scope helpers\n        scope.$hide = function() {\n          scope.$$postDigest(function() {\n            $tooltip.hide();\n          });\n        };\n        scope.$show = function() {\n          scope.$$postDigest(function() {\n            $tooltip.show();\n          });\n        };\n        scope.$toggle = function() {\n          scope.$$postDigest(function() {\n            $tooltip.toggle();\n          });\n        };\n        $tooltip.$isShown = scope.$isShown = false;\n\n        // Private vars\n        var timeout, hoverState;\n\n        // Support contentTemplate option\n        if(options.contentTemplate) {\n          $tooltip.$promise = $tooltip.$promise.then(function(template) {\n            var templateEl = angular.element(template);\n            return fetchTemplate(options.contentTemplate)\n            .then(function(contentTemplate) {\n              var contentEl = findElement('[ng-bind=\"content\"]', templateEl[0]);\n              if(!contentEl.length) contentEl = findElement('[ng-bind=\"title\"]', templateEl[0]);\n              contentEl.removeAttr('ng-bind').html(contentTemplate);\n              return templateEl[0].outerHTML;\n            });\n          });\n        }\n\n        // Fetch, compile then initialize tooltip\n        var tipLinker, tipElement, tipTemplate, tipContainer;\n        $tooltip.$promise.then(function(template) {\n          if(angular.isObject(template)) template = template.data;\n          if(options.html) template = template.replace(htmlReplaceRegExp, 'ng-bind-html=\"');\n          template = trim.apply(template);\n          tipTemplate = template;\n          tipLinker = $compile(template);\n          $tooltip.init();\n        });\n\n        $tooltip.init = function() {\n\n          // Options: delay\n          if (options.delay && angular.isNumber(options.delay)) {\n            options.delay = {\n              show: options.delay,\n              hide: options.delay\n            };\n          }\n\n          // Replace trigger on touch devices ?\n          // if(isTouch && options.trigger === defaults.trigger) {\n          //   options.trigger.replace(/hover/g, 'click');\n          // }\n\n          // Options : container\n          if(options.container === 'self') {\n            tipContainer = element;\n          } else if(angular.isElement(options.container)) {\n            tipContainer = options.container;\n          } else if(options.container) {\n            tipContainer = findElement(options.container);\n          }\n\n          // Options: trigger\n          var triggers = options.trigger.split(' ');\n          angular.forEach(triggers, function(trigger) {\n            if(trigger === 'click') {\n              element.on('click', $tooltip.toggle);\n            } else if(trigger !== 'manual') {\n              element.on(trigger === 'hover' ? 'mouseenter' : 'focus', $tooltip.enter);\n              element.on(trigger === 'hover' ? 'mouseleave' : 'blur', $tooltip.leave);\n              nodeName === 'button' && trigger !== 'hover' && element.on(isTouch ? 'touchstart' : 'mousedown', $tooltip.$onFocusElementMouseDown);\n            }\n          });\n\n          // Options: target\n          if(options.target) {\n            options.target = angular.isElement(options.target) ? options.target : findElement(options.target)[0];\n          }\n\n          // Options: show\n          if(options.show) {\n            scope.$$postDigest(function() {\n              options.trigger === 'focus' ? element[0].focus() : $tooltip.show();\n            });\n          }\n\n        };\n\n        $tooltip.destroy = function() {\n\n          // Unbind events\n          var triggers = options.trigger.split(' ');\n          for (var i = triggers.length; i--;) {\n            var trigger = triggers[i];\n            if(trigger === 'click') {\n              element.off('click', $tooltip.toggle);\n            } else if(trigger !== 'manual') {\n              element.off(trigger === 'hover' ? 'mouseenter' : 'focus', $tooltip.enter);\n              element.off(trigger === 'hover' ? 'mouseleave' : 'blur', $tooltip.leave);\n              nodeName === 'button' && trigger !== 'hover' && element.off(isTouch ? 'touchstart' : 'mousedown', $tooltip.$onFocusElementMouseDown);\n            }\n          }\n\n          // Remove element\n          if(tipElement) {\n            tipElement.remove();\n            tipElement = null;\n          }\n\n          // Cancel pending callbacks\n          clearTimeout(timeout);\n\n          // Destroy scope\n          scope.$destroy();\n\n        };\n\n        $tooltip.enter = function() {\n\n          clearTimeout(timeout);\n          hoverState = 'in';\n          if (!options.delay || !options.delay.show) {\n            return $tooltip.show();\n          }\n\n          timeout = setTimeout(function() {\n            if (hoverState ==='in') $tooltip.show();\n          }, options.delay.show);\n\n        };\n\n        $tooltip.show = function() {\n\n          scope.$emit(options.prefixEvent + '.show.before', $tooltip);\n          var parent = options.container ? tipContainer : null;\n          var after = options.container ? null : element;\n\n          // Hide any existing tipElement\n          if(tipElement) tipElement.remove();\n          // Fetch a cloned element linked from template\n          tipElement = $tooltip.$element = tipLinker(scope, function(clonedElement, scope) {});\n\n          // Set the initial positioning.  Make the tooltip invisible\n          // so IE doesn't try to focus on it off screen.\n          tipElement.css({top: '-9999px', left: '-9999px', display: 'block', visibility: 'hidden'}).addClass(options.placement);\n\n          // Options: animation\n          if(options.animation) tipElement.addClass(options.animation);\n          // Options: type\n          if(options.type) tipElement.addClass(options.prefixClass + '-' + options.type);\n          // Options: custom classes\n          if(options.customClass) tipElement.addClass(options.customClass);\n\n          $animate.enter(tipElement, parent, after, function() {\n            scope.$emit(options.prefixEvent + '.show', $tooltip);\n          });\n          $tooltip.$isShown = scope.$isShown = true;\n          scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\n          $$rAF(function () {\n            $tooltip.$applyPlacement();\n\n            // Once placed, make the tooltip visible\n            tipElement.css({visibility: 'visible'});\n          }); // var a = bodyEl.offsetWidth + 1; ?\n\n          // Bind events\n          if(options.keyboard) {\n            if(options.trigger !== 'focus') {\n              $tooltip.focus();\n              tipElement.on('keyup', $tooltip.$onKeyUp);\n            } else {\n              element.on('keyup', $tooltip.$onFocusKeyUp);\n            }\n          }\n\n        };\n\n        $tooltip.leave = function() {\n\n          clearTimeout(timeout);\n          hoverState = 'out';\n          if (!options.delay || !options.delay.hide) {\n            return $tooltip.hide();\n          }\n          timeout = setTimeout(function () {\n            if (hoverState === 'out') {\n              $tooltip.hide();\n            }\n          }, options.delay.hide);\n\n        };\n\n        $tooltip.hide = function(blur) {\n\n          if(!$tooltip.$isShown) return;\n          scope.$emit(options.prefixEvent + '.hide.before', $tooltip);\n\n          $animate.leave(tipElement, function() {\n            scope.$emit(options.prefixEvent + '.hide', $tooltip);\n\n            // Allow to blur the input when hidden, like when pressing enter key\n            if(blur && options.trigger === 'focus') {\n              return element[0].blur();\n            }\n          });\n\n          $tooltip.$isShown = scope.$isShown = false;\n          scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\n\n          // Unbind events\n          if(options.keyboard && tipElement !== null) {\n            tipElement.off('keyup', $tooltip.$onKeyUp);\n          }\n\n        };\n\n        $tooltip.toggle = function() {\n          $tooltip.$isShown ? $tooltip.leave() : $tooltip.enter();\n        };\n\n        $tooltip.focus = function() {\n          tipElement[0].focus();\n        };\n\n        // Protected methods\n\n        $tooltip.$applyPlacement = function() {\n          if(!tipElement) return;\n\n          // Get the position of the tooltip element.\n          var elementPosition = getPosition();\n\n          // Get the height and width of the tooltip so we can center it.\n          var tipWidth = tipElement.prop('offsetWidth'),\n              tipHeight = tipElement.prop('offsetHeight');\n\n          // Get the tooltip's top and left coordinates to center it with this directive.\n          var tipPosition = getCalculatedOffset(options.placement, elementPosition, tipWidth, tipHeight);\n\n          // Now set the calculated positioning.\n          tipPosition.top += 'px';\n          tipPosition.left += 'px';\n          tipElement.css(tipPosition);\n\n        };\n\n        $tooltip.$onKeyUp = function(evt) {\n          evt.which === 27 && $tooltip.hide();\n        };\n\n        $tooltip.$onFocusKeyUp = function(evt) {\n          evt.which === 27 && element[0].blur();\n        };\n\n        $tooltip.$onFocusElementMouseDown = function(evt) {\n          evt.preventDefault();\n          evt.stopPropagation();\n          // Some browsers do not auto-focus buttons (eg. Safari)\n          $tooltip.$isShown ? element[0].blur() : element[0].focus();\n        };\n\n        // Private methods\n\n        function getPosition() {\n          if(options.container === 'body') {\n            return dimensions.offset(options.target[0] || element[0]);\n          } else {\n            return dimensions.position(options.target[0] || element[0]);\n          }\n        }\n\n        function getCalculatedOffset(placement, position, actualWidth, actualHeight) {\n          var offset;\n          var split = placement.split('-');\n\n          switch (split[0]) {\n          case 'right':\n            offset = {\n              top: position.top + position.height / 2 - actualHeight / 2,\n              left: position.left + position.width\n            };\n            break;\n          case 'bottom':\n            offset = {\n              top: position.top + position.height,\n              left: position.left + position.width / 2 - actualWidth / 2\n            };\n            break;\n          case 'left':\n            offset = {\n              top: position.top + position.height / 2 - actualHeight / 2,\n              left: position.left - actualWidth\n            };\n            break;\n          default:\n            offset = {\n              top: position.top - actualHeight,\n              left: position.left + position.width / 2 - actualWidth / 2\n            };\n            break;\n          }\n\n          if(!split[1]) {\n            return offset;\n          }\n\n          // Add support for corners @todo css\n          if(split[0] === 'top' || split[0] === 'bottom') {\n            switch (split[1]) {\n            case 'left':\n              offset.left = position.left;\n              break;\n            case 'right':\n              offset.left =  position.left + position.width - actualWidth;\n            }\n          } else if(split[0] === 'left' || split[0] === 'right') {\n            switch (split[1]) {\n            case 'top':\n              offset.top = position.top - actualHeight;\n              break;\n            case 'bottom':\n              offset.top = position.top + position.height;\n            }\n          }\n\n          return offset;\n        }\n\n        return $tooltip;\n\n      }\n\n      // Helper functions\n\n      function findElement(query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n\n      function fetchTemplate(template) {\n        return $q.when($templateCache.get(template) || $http.get(template))\n        .then(function(res) {\n          if(angular.isObject(res)) {\n            $templateCache.put(template, res.data);\n            return res.data;\n          }\n          return res;\n        });\n      }\n\n      return TooltipFactory;\n\n    };\n\n  })\n\n  .directive('bsTooltip', function($window, $location, $sce, $tooltip, $$rAF) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['template', 'contentTemplate', 'placement', 'container', 'target', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'type', 'customClass'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Observe scope attributes for change\n        angular.forEach(['title'], function(key) {\n          attr.$observe(key, function(newValue, oldValue) {\n            scope[key] = $sce.trustAsHtml(newValue);\n            angular.isDefined(oldValue) && $$rAF(function() {\n              tooltip && tooltip.$applyPlacement();\n            });\n          });\n        });\n\n        // Support scope as an object\n        attr.bsTooltip && scope.$watch(attr.bsTooltip, function(newValue, oldValue) {\n          if(angular.isObject(newValue)) {\n            angular.extend(scope, newValue);\n          } else {\n            scope.title = newValue;\n          }\n          angular.isDefined(oldValue) && $$rAF(function() {\n            tooltip && tooltip.$applyPlacement();\n          });\n        }, true);\n\n        // Visibility binding support\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if(!tooltip || !angular.isDefined(newValue)) return;\n          if(angular.isString(newValue)) newValue = newValue.match(',?(tooltip),?');\n          newValue === true ? tooltip.show() : tooltip.hide();\n        });\n\n        // Initialize popover\n        var tooltip = $tooltip(element, options);\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if(tooltip) tooltip.destroy();\n          options = null;\n          tooltip = null;\n        });\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}