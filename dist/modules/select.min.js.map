{"version":3,"sources":["modules/select.js"],"names":["angular","trigger","provider","container","this","defaults","keyboard","html","delay","multiple","allNoneButtons","sort","caretHtml","placeholder","allText","noneText","maxLength","maxLengthHtml","iconCheckmark","isNative","isTouch","SelectFactory","$select","options","$get","scope","$scope","$activeIndex","config","$tooltip","element","$isMultiple","$showAllNoneButtons","$iconCheckmark","$allText","$activate","activate","index","$$postDigest","select","evt","$isActive","$isVisible","i","$selectNone","$matches","length","matches","$updateActiveIndex","splice","a","indexOf","push","b","controller","value","$apply","$setViewValue","hide","prefixEvent","$emit","isArray","$modelValue","minLength","$viewValue","equals","$onMouseDown","preventDefault","stopPropagation","targetEl","keyCode","$onKeyDown","test","$digest","isUndefined","$selectScrollFix","$isIE","stopImmediatePropagation","target","focus","ua","_show","show","activeElement","tagName","e","$element","addClass","$timeout","_hide","on","off","directive","$window","document","link","require","restrict","forEach","attr","falseValueRegExp","isDefined","key","dataMultiple","nodeName","inputEl","css","after","addEventListener","watchedOptions","parsedOptions","valuesFn","update","values","ngModel","$match","newValue","oldValue","$render","selected","filter","join","map","$getIndex","label","$isEmpty","$on","destroy"],"mappings":"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","file":"modules/select.min.js","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.select', ['mgcrea.ngStrap.tooltip', 'mgcrea.ngStrap.helpers.parseOptions'])\n\n  .provider('$select', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'select',\n      prefixEvent: '$select',\n      placement: 'bottom-left',\n      templateUrl: 'select/select.tpl.html',\n      trigger: 'focus',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      multiple: false,\n      allNoneButtons: false,\n      sort: true,\n      caretHtml: '&nbsp;<span class=\"caret\"></span>',\n      placeholder: 'Choose among the following...',\n      allText: 'All',\n      noneText: 'None',\n      maxLength: 3,\n      maxLengthHtml: 'selected',\n      iconCheckmark: 'glyphicon glyphicon-ok'\n    };\n\n    this.$get = function ($window, $document, $rootScope, $tooltip, $timeout) {\n\n      // var bodyEl = angular.element($window.document.body);\n      var isNative = /(ip[ao]d|iphone|android)/ig.test($window.navigator.userAgent);\n      var isTouch = ('createTouch' in $window.document) && isNative;\n\n      function SelectFactory(element, controller, config) {\n\n        var $select = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $select = $tooltip(element, options);\n        var scope = $select.$scope;\n\n        scope.$matches = [];\n        if (options.multiple) {\n          scope.$activeIndex = [];\n        } else {\n          scope.$activeIndex = -1;\n        }\n        scope.$isMultiple = options.multiple;\n        scope.$showAllNoneButtons = options.allNoneButtons && options.multiple;\n        scope.$iconCheckmark = options.iconCheckmark;\n        scope.$allText = options.allText;\n        scope.$noneText = options.noneText;\n\n        scope.$activate = function (index) {\n          scope.$$postDigest(function () {\n            $select.activate(index);\n          });\n        };\n\n        scope.$select = function (index, evt) {\n          scope.$$postDigest(function () {\n            $select.select(index);\n          });\n        };\n\n        scope.$isVisible = function () {\n          return $select.$isVisible();\n        };\n\n        scope.$isActive = function (index) {\n          return $select.$isActive(index);\n        };\n\n        scope.$selectAll = function () {\n          for (var i = 0; i < scope.$matches.length; i++) {\n            if (!scope.$isActive(i)) {\n              scope.$select(i);\n            }\n          }\n        };\n\n        scope.$selectNone = function () {\n          for (var i = 0; i < scope.$matches.length; i++) {\n            if (scope.$isActive(i)) {\n              scope.$select(i);\n            }\n          }\n        };\n\n        // Public methods\n\n        $select.update = function (matches) {\n          scope.$matches = matches;\n          $select.$updateActiveIndex();\n        };\n\n        $select.activate = function (index) {\n          if (options.multiple) {\n            if ($select.$isActive(index)) {\n              scope.$activeIndex.splice(scope.$activeIndex.indexOf(index), 1);\n            } else {\n              scope.$activeIndex.push(index);\n            }\n            if (options.sort) scope.$activeIndex.sort(function (a, b) { return a - b; }); // use numeric sort instead of default sort\n          } else {\n            scope.$activeIndex = index;\n          }\n          return scope.$activeIndex;\n        };\n\n        $select.select = function (index) {\n          var value = scope.$matches[index].value;\n          scope.$apply(function () {\n            $select.activate(index);\n            if (options.multiple) {\n              controller.$setViewValue(scope.$activeIndex.map(function (index) {\n                if (angular.isUndefined(scope.$matches[index])) {\n                  return null;\n                }\n                return scope.$matches[index].value;\n              }));\n            } else {\n              controller.$setViewValue(value);\n              // Hide if single select\n              $select.hide();\n            }\n          });\n          // Emit event\n          scope.$emit(options.prefixEvent + '.select', value, index, $select);\n        };\n\n        // Protected methods\n\n        $select.$updateActiveIndex = function () {\n          if (options.multiple) {\n            if (angular.isArray(controller.$modelValue)) {\n              scope.$activeIndex = controller.$modelValue.map(function (value) {\n                return $select.$getIndex(value);\n              });\n            } else {\n              scope.$activeIndex = [];\n            }\n          } else {\n            if (angular.isDefined(controller.$modelValue) && scope.$matches.length) {\n              scope.$activeIndex = $select.$getIndex(controller.$modelValue);\n            } else {\n              scope.$activeIndex = -1;\n            }\n          }\n        };\n\n        $select.$isVisible = function () {\n          if (!options.minLength || !controller) {\n            return scope.$matches.length;\n          }\n          // minLength support\n          return scope.$matches.length && controller.$viewValue.length >= options.minLength;\n        };\n\n        $select.$isActive = function (index) {\n          if (options.multiple) {\n            return scope.$activeIndex.indexOf(index) !== -1;\n          }\n          return scope.$activeIndex === index;\n        };\n\n        $select.$getIndex = function (value) {\n          var index;\n          for (index = scope.$matches.length; index--;) {\n            if (angular.equals(scope.$matches[index].value, value)) break;\n          }\n          return index;\n        };\n\n        $select.$onMouseDown = function (evt) {\n          // Prevent blur on mousedown on .dropdown-menu\n          evt.preventDefault();\n          evt.stopPropagation();\n          // Emulate click for mobile devices\n          if (isTouch) {\n            var targetEl = angular.element(evt.target);\n            targetEl.triggerHandler('click');\n          }\n        };\n\n        $select.$onKeyDown = function (evt) {\n          if (!/(9|13|38|40)/.test(evt.keyCode)) return;\n          // Let tab propagate\n          if (evt.keyCode !== 9) {\n            evt.preventDefault();\n            evt.stopPropagation();\n          }\n\n          // release focus on tab\n          if (options.multiple && evt.keyCode === 9) {\n            return $select.hide();\n          }\n\n          // Select with enter\n          if (!options.multiple && (evt.keyCode === 13 || evt.keyCode === 9)) {\n            return $select.select(scope.$activeIndex);\n          }\n\n          if (!options.multiple) {\n            // Navigate with keyboard\n            if (evt.keyCode === 38 && scope.$activeIndex > 0) scope.$activeIndex--;\n            else if (evt.keyCode === 38 && scope.$activeIndex < 0) scope.$activeIndex = scope.$matches.length - 1;\n            else if (evt.keyCode === 40 && scope.$activeIndex < scope.$matches.length - 1) scope.$activeIndex++;\n            else if (angular.isUndefined(scope.$activeIndex)) scope.$activeIndex = 0;\n            scope.$digest();\n          }\n        };\n\n        $select.$isIE = function () {\n          var ua = $window.navigator.userAgent;\n          return ua.indexOf('MSIE ') > 0 || ua.indexOf('Trident/') > 0 || ua.indexOf('Edge/') > 0;\n        };\n\n        $select.$selectScrollFix = function (e) {\n          if ($document[0].activeElement.tagName === 'UL') {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            e.target.focus();\n          }\n        };\n\n        // Overrides\n\n        var _show = $select.show;\n        $select.show = function () {\n          _show();\n          if (options.multiple) {\n            $select.$element.addClass('select-multiple');\n          }\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function () {\n            $select.$element.on(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\n            if (options.keyboard) {\n              element.on('keydown', $select.$onKeyDown);\n            }\n          }, 0, false);\n        };\n\n        var _hide = $select.hide;\n        $select.hide = function () {\n          if (!options.multiple && angular.isUndefined(controller.$modelValue)) {\n            scope.$activeIndex = -1;\n          }\n          $select.$element.off(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\n          if (options.keyboard) {\n            element.off('keydown', $select.$onKeyDown);\n          }\n          _hide(true);\n        };\n\n        return $select;\n\n      }\n\n      SelectFactory.defaults = defaults;\n      return SelectFactory;\n\n    };\n\n  })\n\n  .directive('bsSelect', function ($window, $parse, $q, $select, $parseOptions) {\n\n    var defaults = $select.defaults;\n\n    return {\n      restrict: 'EAC',\n      require: 'ngModel',\n      link: function postLink(scope, element, attr, controller) {\n\n        // Directive options\n        var options = {scope: scope, placeholder: defaults.placeholder};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'placeholder', 'allNoneButtons', 'maxLength', 'maxLengthHtml', 'allText', 'noneText', 'iconCheckmark', 'autoClose', 'id', 'sort', 'caretHtml', 'prefixClass', 'prefixEvent'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['html', 'container', 'allNoneButtons', 'sort'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) {\n            options[key] = false;\n          }\n        });\n\n        // Only parse data-multiple. Angular sets existence attributes to true (multiple/required/etc), they apply this\n        // to data-multiple as well for some reason, so we'll parse this ourselves and disregard multiple\n        var dataMultiple = element.attr('data-multiple');\n        if (angular.isDefined(dataMultiple)) {\n          if (falseValueRegExp.test(dataMultiple)) {\n            options.multiple = false;\n          } else {\n            options.multiple = dataMultiple;\n          }\n        }\n\n        // Add support for select markup\n        if (element[0].nodeName.toLowerCase() === 'select') {\n          var inputEl = element;\n          inputEl.css('display', 'none');\n          element = angular.element('<button type=\"button\" class=\"btn btn-default\"></button>');\n          inputEl.after(element);\n        }\n\n        // Build proper bsOptions\n        var parsedOptions = $parseOptions(attr.bsOptions);\n\n        // Initialize select\n        var select = $select(element, controller, options);\n\n        if (select.$isIE()) {\n          element[0].addEventListener('blur', select.$selectScrollFix);\n        }\n\n        // Watch bsOptions values before filtering for changes\n        var watchedOptions = parsedOptions.$match[7].replace(/\\|.+/, '').trim();\n        scope.$watch(watchedOptions, function (newValue, oldValue) {\n          // console.warn('scope.$watch(%s)', watchedOptions, newValue, oldValue);\n          parsedOptions.valuesFn(scope, controller)\n          .then(function (values) {\n            select.update(values);\n            controller.$render();\n          });\n        }, true);\n\n        // Watch model for changes\n        scope.$watch(attr.ngModel, function (newValue, oldValue) {\n          // console.warn('scope.$watch(%s)', attr.ngModel, newValue, oldValue);\n          select.$updateActiveIndex();\n          controller.$render();\n        }, true);\n\n        // Model rendering in view\n        controller.$render = function () {\n          // console.warn('$render', element.attr('ng-model'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\n          var selected;\n          var index;\n          if (options.multiple && angular.isArray(controller.$modelValue)) {\n            selected = controller.$modelValue.map(function (value) {\n              index = select.$getIndex(value);\n              return index !== -1 ? select.$scope.$matches[index].label : false;\n            }).filter(angular.isDefined);\n            if (selected.length > (options.maxLength || defaults.maxLength)) {\n              selected = selected.length + ' ' + (options.maxLengthHtml || defaults.maxLengthHtml);\n            } else {\n              selected = selected.join(', ');\n            }\n          } else {\n            index = select.$getIndex(controller.$modelValue);\n            selected = index !== -1 ? select.$scope.$matches[index].label : false;\n          }\n          element.html((selected ? selected : options.placeholder) + (options.caretHtml ? options.caretHtml : defaults.caretHtml));\n        };\n\n        if (options.multiple) {\n          controller.$isEmpty = function (value) {\n            return !value || value.length === 0;\n          };\n        }\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (select) select.destroy();\n          options = null;\n          select = null;\n        });\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}