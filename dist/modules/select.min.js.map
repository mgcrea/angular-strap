{"version":3,"sources":["select/select.js"],"names":[],"mappings":"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","file":"select.min.js","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.select', ['mgcrea.ngStrap.tooltip', 'mgcrea.ngStrap.helpers.parseOptions'])\n\n  .provider('$select', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'select',\n      prefixEvent: '$select',\n      placement: 'bottom-left',\n      template: 'select/select.tpl.html',\n      trigger: 'focus',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      multiple: false,\n      allNoneButtons: false,\n      sort: true,\n      caretHtml: '&nbsp;<span class=\"caret\"></span>',\n      placeholder: 'Choose among the following...',\n      allText: 'All',\n      noneText: 'None',\n      maxLength: 3,\n      maxLengthHtml: 'selected',\n      iconCheckmark: 'glyphicon glyphicon-ok'\n    };\n\n    this.$get = function($window, $document, $rootScope, $tooltip, $timeout) {\n\n      var bodyEl = angular.element($window.document.body);\n      var isNative = /(ip(a|o)d|iphone|android)/ig.test($window.navigator.userAgent);\n      var isTouch = ('createTouch' in $window.document) && isNative;\n\n      function SelectFactory(element, controller, config) {\n\n        var $select = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        // parse sort option value to support attribute as string\n        // when binded to interpolated value\n        options.sort = options.sort.toString().match(/true|1/i);\n\n        $select = $tooltip(element, options);\n        var scope = $select.$scope;\n\n        scope.$matches = [];\n        scope.$activeIndex = -1;\n        scope.$isMultiple = options.multiple;\n        scope.$showAllNoneButtons = options.allNoneButtons && options.multiple;\n        scope.$iconCheckmark = options.iconCheckmark;\n        scope.$allText = options.allText;\n        scope.$noneText = options.noneText;\n\n        scope.$activate = function(index) {\n          scope.$$postDigest(function() {\n            $select.activate(index);\n          });\n        };\n\n        scope.$select = function(index, evt) {\n          scope.$$postDigest(function() {\n            $select.select(index);\n          });\n        };\n\n        scope.$isVisible = function() {\n          return $select.$isVisible();\n        };\n\n        scope.$isActive = function(index) {\n          return $select.$isActive(index);\n        };\n\n        scope.$selectAll = function () {\n          for (var i = 0; i < scope.$matches.length; i++) {\n            if (!scope.$isActive(i)) {\n              scope.$select(i);\n            }\n          }\n        };\n\n        scope.$selectNone = function () {\n          for (var i = 0; i < scope.$matches.length; i++) {\n            if (scope.$isActive(i)) {\n              scope.$select(i);\n            }\n          }\n        };\n\n        // Public methods\n\n        $select.update = function(matches) {\n          scope.$matches = matches;\n          $select.$updateActiveIndex();\n        };\n\n        $select.activate = function(index) {\n          if(options.multiple) {\n            $select.$isActive(index) ? scope.$activeIndex.splice(scope.$activeIndex.indexOf(index), 1) : scope.$activeIndex.push(index);\n            if(options.sort) scope.$activeIndex.sort();\n          } else {\n            scope.$activeIndex = index;\n          }\n          return scope.$activeIndex;\n        };\n\n        $select.select = function(index) {\n          var value = scope.$matches[index].value;\n          scope.$apply(function() {\n            $select.activate(index);\n            if(options.multiple) {\n              controller.$setViewValue(scope.$activeIndex.map(function(index) {\n                return scope.$matches[index].value;\n              }));\n            } else {\n              controller.$setViewValue(value);\n              // Hide if single select\n              $select.hide();\n            }\n          });\n          // Emit event\n          scope.$emit(options.prefixEvent + '.select', value, index, $select);\n        };\n\n        // Protected methods\n\n        $select.$updateActiveIndex = function() {\n          if(controller.$modelValue && scope.$matches.length) {\n            if(options.multiple && angular.isArray(controller.$modelValue)) {\n              scope.$activeIndex = controller.$modelValue.map(function(value) {\n                return $select.$getIndex(value);\n              });\n            } else {\n              scope.$activeIndex = $select.$getIndex(controller.$modelValue);\n            }\n          } else if(scope.$activeIndex >= scope.$matches.length) {\n            scope.$activeIndex = options.multiple ? [] : 0;\n          }\n        };\n\n        $select.$isVisible = function() {\n          if(!options.minLength || !controller) {\n            return scope.$matches.length;\n          }\n          // minLength support\n          return scope.$matches.length && controller.$viewValue.length >= options.minLength;\n        };\n\n        $select.$isActive = function(index) {\n          if(options.multiple) {\n            return scope.$activeIndex.indexOf(index) !== -1;\n          } else {\n            return scope.$activeIndex === index;\n          }\n        };\n\n        $select.$getIndex = function(value) {\n          var l = scope.$matches.length, i = l;\n          if(!l) return;\n          for(i = l; i--;) {\n            if(scope.$matches[i].value === value) break;\n          }\n          if(i < 0) return;\n          return i;\n        };\n\n        $select.$onMouseDown = function(evt) {\n          // Prevent blur on mousedown on .dropdown-menu\n          evt.preventDefault();\n          evt.stopPropagation();\n          // Emulate click for mobile devices\n          if(isTouch) {\n            var targetEl = angular.element(evt.target);\n            targetEl.triggerHandler('click');\n          }\n        };\n\n        $select.$onKeyDown = function(evt) {\n          if (!/(9|13|38|40)/.test(evt.keyCode)) return;\n          evt.preventDefault();\n          evt.stopPropagation();\n\n          // release focus on tab\n          if (options.multiple && evt.keyCode === 9) {\n            return $select.hide();\n          }\n\n          // Select with enter\n          if(!options.multiple && (evt.keyCode === 13 || evt.keyCode === 9)) {\n            return $select.select(scope.$activeIndex);\n          }\n\n          if (!options.multiple) {\n            // Navigate with keyboard\n            if(evt.keyCode === 38 && scope.$activeIndex > 0) scope.$activeIndex--;\n            else if(evt.keyCode === 38 && scope.$activeIndex < 0) scope.$activeIndex = scope.$matches.length - 1;\n            else if(evt.keyCode === 40 && scope.$activeIndex < scope.$matches.length - 1) scope.$activeIndex++;\n            else if(angular.isUndefined(scope.$activeIndex)) scope.$activeIndex = 0;\n            scope.$digest();\n          }\n        };\n\n        // Overrides\n\n        var _show = $select.show;\n        $select.show = function() {\n          _show();\n          if(options.multiple) {\n            $select.$element.addClass('select-multiple');\n          }\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function() {\n            $select.$element.on(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\n            if(options.keyboard) {\n              element.on('keydown', $select.$onKeyDown);\n            }\n          }, 0, false);\n        };\n\n        var _hide = $select.hide;\n        $select.hide = function() {\n          if(!options.multiple && !controller.$modelValue) {\n            scope.$activeIndex = -1;\n          } \n          $select.$element.off(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\n          if(options.keyboard) {\n            element.off('keydown', $select.$onKeyDown);\n          }\n          _hide(true);\n        };\n\n        return $select;\n\n      }\n\n      SelectFactory.defaults = defaults;\n      return SelectFactory;\n\n    };\n\n  })\n\n  .directive('bsSelect', function($window, $parse, $q, $select, $parseOptions) {\n\n    var defaults = $select.defaults;\n\n    return {\n      restrict: 'EAC',\n      require: 'ngModel',\n      link: function postLink(scope, element, attr, controller) {\n\n        // Directive options\n        var options = {scope: scope, placeholder: defaults.placeholder};\n        angular.forEach(['placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'template', 'placeholder', 'multiple', 'allNoneButtons', 'maxLength', 'maxLengthHtml', 'allText', 'noneText', 'iconCheckmark', 'autoClose', 'id', 'sort', 'caretHtml'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Add support for select markup\n        if(element[0].nodeName.toLowerCase() === 'select') {\n          var inputEl = element;\n          inputEl.css('display', 'none');\n          element = angular.element('<button type=\"button\" class=\"btn btn-default\"></button>');\n          inputEl.after(element);\n        }\n\n        // Build proper bsOptions\n        var parsedOptions = $parseOptions(attr.bsOptions);\n\n        // Initialize select\n        var select = $select(element, controller, options);\n\n        // Watch bsOptions values before filtering for changes\n        var watchedOptions = parsedOptions.$match[7].replace(/\\|.+/, '').trim();\n        scope.$watch(watchedOptions, function(newValue, oldValue) {\n          // console.warn('scope.$watch(%s)', watchedOptions, newValue, oldValue);\n          parsedOptions.valuesFn(scope, controller)\n          .then(function(values) {\n            select.update(values);\n            controller.$render();\n          });\n        }, true);\n\n        // Watch model for changes\n        scope.$watch(attr.ngModel, function(newValue, oldValue) {\n          // console.warn('scope.$watch(%s)', attr.ngModel, newValue, oldValue);\n          select.$updateActiveIndex();\n          controller.$render();\n        }, true);\n\n        // Model rendering in view\n        controller.$render = function () {\n          // console.warn('$render', element.attr('ng-model'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\n          var selected, index;\n          if(options.multiple && angular.isArray(controller.$modelValue)) {\n            selected = controller.$modelValue.map(function(value) {\n              index = select.$getIndex(value);\n              return angular.isDefined(index) ? select.$scope.$matches[index].label : false;\n            }).filter(angular.isDefined);\n            if(selected.length > (options.maxLength || defaults.maxLength)) {\n              selected = selected.length + ' ' + (options.maxLengthHtml || defaults.maxLengthHtml);\n            } else {\n              selected = selected.join(', ');\n            }\n          } else {\n            index = select.$getIndex(controller.$modelValue);\n            selected = angular.isDefined(index) ? select.$scope.$matches[index].label : false;\n          }\n          element.html((selected ? selected : options.placeholder) + (options.caretHtml ? options.caretHtml : defaults.caretHtml));\n        };\n\n        if(options.multiple){\n          controller.$isEmpty = function(value){\n            return !value || value.length === 0;\n          };\n        }\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (select) select.destroy();\n          options = null;\n          select = null;\n        });\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}