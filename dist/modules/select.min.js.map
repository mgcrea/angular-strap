{"version":3,"file":"select.min.js","sources":["select\\select.js"],"names":["angular","module","provider","defaults","this","animation","prefixClass","prefixEvent","placement","template","trigger","container","keyboard","html","delay","multiple","allNoneButtons","sort","caretHtml","placeholder","maxLength","maxLengthHtml","iconCheckmark","$get","$window","$document","$rootScope","$tooltip","SelectFactory","element","controller","config","$select","options","extend","scope","$scope","$matches","$activeIndex","$isMultiple","$showAllNoneButtons","$iconCheckmark","$activate","index","$$postDigest","activate","select","$isVisible","$isActive","$selectAll","i","length","$selectNone","update","matches","$updateActiveIndex","splice","indexOf","push","value","$apply","$setViewValue","map","hide","$emit","$modelValue","isArray","$getIndex","minLength","$viewValue","l","$onMouseDown","evt","preventDefault","stopPropagation","isTouch","targetEl","target","triggerHandler","$onKeyDown","test","keyCode","isUndefined","$digest","_show","show","$element","addClass","setTimeout","on","_hide","off","document","body","directive","$parse","$q","$parseOptions","restrict","require","link","attr","forEach","key","isDefined","nodeName","toLowerCase","inputEl","css","after","parsedOptions","ngOptions","reloadData","valuesFn","then","values","$render","reloadEvents","undefined","replace","split","filter","eventName","trim","$root","$on","watchedOptions","$match","$watch","ngModel","getPlaceHolder","$eval","e","selected","label","join","destroy"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.select', ['mgcrea.ngStrap.tooltip', 'mgcrea.ngStrap.helpers.parseOptions'])\r\n\r\n  .provider('$select', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      prefixClass: 'select',\r\n      prefixEvent: '$select',\r\n      placement: 'bottom-left',\r\n      template: 'select/select.tpl.html',\r\n      trigger: 'focus',\r\n      container: false,\r\n      keyboard: true,\r\n      html: false,\r\n      delay: 0,\r\n      multiple: false,\r\n      allNoneButtons: false,\r\n      sort: true,\r\n      caretHtml: '&nbsp;<span class=\"caret\"></span>',\r\n      placeholder: 'Choose among the following...',\r\n      maxLength: 3,\r\n      maxLengthHtml: 'selected',\r\n      iconCheckmark: 'glyphicon glyphicon-ok'\r\n    };\r\n\r\n    this.$get = function($window, $document, $rootScope, $tooltip) {\r\n\r\n      var bodyEl = angular.element($window.document.body);\r\n      var isTouch = 'createTouch' in $window.document;\r\n\r\n      function SelectFactory(element, controller, config) {\r\n\r\n        var $select = {};\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n\r\n        $select = $tooltip(element, options);\r\n        var scope = $select.$scope;\r\n\r\n        scope.$matches = [];\r\n        scope.$activeIndex = 0;\r\n        scope.$isMultiple = options.multiple;\r\n        scope.$showAllNoneButtons = options.allNoneButtons && options.multiple;\r\n        scope.$iconCheckmark = options.iconCheckmark;\r\n\r\n        scope.$activate = function(index) {\r\n          scope.$$postDigest(function() {\r\n            $select.activate(index);\r\n          });\r\n        };\r\n\r\n        scope.$select = function(index, evt) {\r\n          scope.$$postDigest(function() {\r\n            $select.select(index);\r\n          });\r\n        };\r\n\r\n        scope.$isVisible = function() {\r\n          return $select.$isVisible();\r\n        };\r\n\r\n        scope.$isActive = function(index) {\r\n          return $select.$isActive(index);\r\n        };\r\n        \r\n        scope.$selectAll = function () {\r\n          for (var i = 0; i < scope.$matches.length; i++) {\r\n            if (!scope.$isActive(i)) {\r\n              scope.$select(i);\r\n            }\r\n          }\r\n        };\r\n                            \r\n        scope.$selectNone = function () {\r\n          for (var i = 0; i < scope.$matches.length; i++) {\r\n            if (scope.$isActive(i)) {\r\n              scope.$select(i);\r\n            }\r\n          }\r\n        };\r\n\r\n        // Public methods\r\n\r\n        $select.update = function(matches) {\r\n          scope.$matches = matches;\r\n          $select.$updateActiveIndex();\r\n        };\r\n\r\n        $select.activate = function(index) {\r\n          if(options.multiple) {\r\n            scope.$activeIndex.sort();\r\n            $select.$isActive(index) ? scope.$activeIndex.splice(scope.$activeIndex.indexOf(index), 1) : scope.$activeIndex.push(index);\r\n            if(options.sort) scope.$activeIndex.sort();\r\n          } else {\r\n            scope.$activeIndex = index;\r\n          }\r\n          return scope.$activeIndex;\r\n        };\r\n\r\n        $select.select = function(index) {\r\n          var value = scope.$matches[index].value;\r\n          scope.$apply(function() {\r\n            $select.activate(index);\r\n            if(options.multiple) {\r\n              controller.$setViewValue(scope.$activeIndex.map(function(index) {\r\n                return scope.$matches[index].value;\r\n              }));\r\n            } else {\r\n              controller.$setViewValue(value);\r\n              // Hide if single select\r\n              $select.hide();\r\n            }\r\n          });\r\n          // Emit event\r\n          scope.$emit(options.prefixEvent + '.select', value, index);\r\n        };\r\n\r\n        // Protected methods\r\n\r\n        $select.$updateActiveIndex = function() {\r\n          if(controller.$modelValue && scope.$matches.length) {\r\n            if(options.multiple && angular.isArray(controller.$modelValue)) {\r\n              scope.$activeIndex = controller.$modelValue.map(function(value) {\r\n                return $select.$getIndex(value);\r\n              });\r\n            } else {\r\n              scope.$activeIndex = $select.$getIndex(controller.$modelValue);\r\n            }\r\n          } else if(scope.$activeIndex >= scope.$matches.length) {\r\n            scope.$activeIndex = options.multiple ? [] : 0;\r\n          }\r\n        };\r\n\r\n        $select.$isVisible = function() {\r\n          if(!options.minLength || !controller) {\r\n            return scope.$matches.length;\r\n          }\r\n          // minLength support\r\n          return scope.$matches.length && controller.$viewValue.length >= options.minLength;\r\n        };\r\n\r\n        $select.$isActive = function(index) {\r\n          if(options.multiple) {\r\n            return scope.$activeIndex.indexOf(index) !== -1;\r\n          } else {\r\n            return scope.$activeIndex === index;\r\n          }\r\n        };\r\n\r\n        $select.$getIndex = function(value) {\r\n          var l = scope.$matches.length, i = l;\r\n          if(!l) return;\r\n          for(i = l; i--;) {\r\n            if(scope.$matches[i].value === value) break;\r\n          }\r\n          if(i < 0) return;\r\n          return i;\r\n        };\r\n\r\n        $select.$onMouseDown = function(evt) {\r\n          // Prevent blur on mousedown on .dropdown-menu\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n          // Emulate click for mobile devices\r\n          if(isTouch) {\r\n            var targetEl = angular.element(evt.target);\r\n            targetEl.triggerHandler('click');\r\n          }\r\n        };\r\n\r\n        $select.$onKeyDown = function(evt) {\r\n          if (!/(9|13|38|40)/.test(evt.keyCode)) return;\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n\r\n          // Select with enter\r\n          if(!options.multiple && (evt.keyCode === 13 || evt.keyCode === 9)) {\r\n            return $select.select(scope.$activeIndex);\r\n          }\r\n\r\n          // Navigate with keyboard\r\n          if(evt.keyCode === 38 && scope.$activeIndex > 0) scope.$activeIndex--;\r\n          else if(evt.keyCode === 40 && scope.$activeIndex < scope.$matches.length - 1) scope.$activeIndex++;\r\n          else if(angular.isUndefined(scope.$activeIndex)) scope.$activeIndex = 0;\r\n          scope.$digest();\r\n        };\r\n\r\n        // Overrides\r\n\r\n        var _show = $select.show;\r\n        $select.show = function() {\r\n          _show();\r\n          if(options.multiple) {\r\n            $select.$element.addClass('select-multiple');\r\n          }\r\n          setTimeout(function() {\r\n            $select.$element.on(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\r\n            if(options.keyboard) {\r\n              element.on('keydown', $select.$onKeyDown);\r\n            }\r\n          });\r\n        };\r\n\r\n        var _hide = $select.hide;\r\n        $select.hide = function() {\r\n          $select.$element.off(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\r\n          if(options.keyboard) {\r\n            element.off('keydown', $select.$onKeyDown);\r\n          }\r\n          _hide(true);\r\n        };\r\n\r\n        return $select;\r\n\r\n      }\r\n\r\n      SelectFactory.defaults = defaults;\r\n      return SelectFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsSelect', function($window, $parse, $q, $select, $parseOptions) {\r\n\r\n    var defaults = $select.defaults;\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      require: 'ngModel',\r\n      link: function postLink(scope, element, attr, controller) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope};\r\n        angular.forEach(['placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'template', 'placeholder', 'multiple', 'allNoneButtons', 'maxLength', 'maxLengthHtml','reloadEvents'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Add support for select markup\r\n        if(element[0].nodeName.toLowerCase() === 'select') {\r\n          var inputEl = element;\r\n          inputEl.css('display', 'none');\r\n          element = angular.element('<button type=\"button\" class=\"btn btn-default\"></button>');\r\n          inputEl.after(element);\r\n        }\r\n\r\n        // Build proper ngOptions\r\n        var parsedOptions = $parseOptions(attr.ngOptions);\r\n\r\n        // Initialize select\r\n        var select = $select(element, controller, options);\r\n\r\n        var reloadData = function(newValue, oldValue) {\r\n            // console.warn('scope.$watch(%s)', watchedOptions, newValue, oldValue);\r\n            parsedOptions.valuesFn(scope, controller)\r\n                .then(function(values) {\r\n                    select.update(values);\r\n                    controller.$render();\r\n                });\r\n        };\r\n\r\n        // Initialize reloading\r\n        var reloadEvents = options.reloadEvents === undefined ? [] : options.reloadEvents.replace(' ', ',').split(',').filter(function (eventName) {\r\n                    return eventName.trim() !== '';\r\n                });\r\n\r\n        reloadEvents.forEach(function (eventName) {\r\n            scope.$root.$on(eventName, reloadData);\r\n        });\r\n\r\n        // Watch ngOptions values before filtering for changes\r\n        var watchedOptions = parsedOptions.$match[7].replace(/\\|.+/, '').trim();\r\n        scope.$watch(watchedOptions, reloadData, true);\r\n\r\n        // Watch model for changes\r\n        scope.$watch(attr.ngModel, function(newValue, oldValue) {\r\n          // console.warn('scope.$watch(%s)', attr.ngModel, newValue, oldValue);\r\n          select.$updateActiveIndex();\r\n          controller.$render();\r\n        }, true);\r\n\r\n        var getPlaceHolder = function() {\r\n            try {\r\n                return scope.$eval(attr.placeholder) || attr.placeholder || defaults.placeholder;\r\n            } catch(e) {\r\n                return attr.placeholder || defaults.placeholder;\r\n            }\r\n        };\r\n\r\n        // Model rendering in view\r\n        controller.$render = function () {\r\n          // console.warn('$render', element.attr('ng-model'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\r\n          var selected, index;\r\n          if(options.multiple && angular.isArray(controller.$modelValue)) {\r\n            selected = controller.$modelValue.map(function(value) {\r\n              index = select.$getIndex(value);\r\n              return angular.isDefined(index) ? select.$scope.$matches[index].label : false;\r\n            }).filter(angular.isDefined);\r\n            if(selected.length > (options.maxLength || defaults.maxLength)) {\r\n              selected = selected.length + ' ' + (options.maxLengthHtml || defaults.maxLengthHtml);\r\n            } else {\r\n              selected = selected.join(', ');\r\n            }\r\n          } else {\r\n            index = select.$getIndex(controller.$modelValue);\r\n            selected = angular.isDefined(index) ? select.$scope.$matches[index].label : false;\r\n          }\r\n\r\n          element.html((selected ? selected : getPlaceHolder()) + defaults.caretHtml);\r\n        };\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function() {\r\n          select.destroy();\r\n          options = null;\r\n          select = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n"],"sourceRoot":"/source/"}