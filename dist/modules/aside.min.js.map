{"version":3,"sources":["aside/aside.js"],"names":[],"mappings":"AAAA;;AAEA,QAAQ,OAAO,wBAAwB,CAAC;;GAErC,SAAS,UAAU,WAAW;;IAE7B,IAAI,WAAW,KAAK,WAAW;MAC7B,WAAW;MACX,aAAa;MACb,aAAa;MACb,WAAW;MACX,UAAU;MACV,iBAAiB;MACjB,WAAW;MACX,SAAS;MACT,UAAU;MACV,UAAU;MACV,MAAM;MACN,MAAM;;;IAGR,KAAK,kBAAO,SAAS,QAAQ;;MAE3B,SAAS,aAAa,QAAQ;;QAE5B,IAAI,SAAS;;;QAGb,IAAI,UAAU,QAAQ,OAAO,IAAI,UAAU;;QAE3C,SAAS,OAAO;;QAEhB,OAAO;;;;MAIT,OAAO;;;;;;GAMV,UAAU,yCAAW,SAAS,SAAS,MAAM,QAAQ;;IAEpD,IAAI,wBAAwB,QAAQ,yBAAyB,QAAQ;;IAErE,OAAO;MACL,UAAU;MACV,OAAO;MACP,MAAM,SAAS,SAAS,OAAO,SAAS,MAAM,cAAc;;QAE1D,IAAI,UAAU,CAAC,OAAO,OAAO,SAAS,SAAS,MAAM;QACrD,QAAQ,QAAQ,CAAC,YAAY,mBAAmB,aAAa,YAAY,YAAY,QAAQ,aAAa,cAAc,SAAS,KAAK;UACpI,GAAG,QAAQ,UAAU,KAAK,OAAO,QAAQ,OAAO,KAAK;;;;QAIvD,QAAQ,QAAQ,CAAC,SAAS,YAAY,SAAS,KAAK;UAClD,KAAK,QAAQ,KAAK,SAAS,KAAK,SAAS,UAAU,UAAU;YAC3D,MAAM,OAAO,KAAK,YAAY;;;;;QAKlC,KAAK,WAAW,MAAM,OAAO,KAAK,SAAS,SAAS,UAAU,UAAU;UACtE,GAAG,QAAQ,SAAS,WAAW;YAC7B,QAAQ,OAAO,OAAO;iBACjB;YACL,MAAM,UAAU;;WAEjB;;;QAGH,IAAI,QAAQ,OAAO;;;QAGnB,QAAQ,GAAG,KAAK,WAAW,SAAS,MAAM;;;QAG1C,MAAM,IAAI,YAAY,WAAW;UAC/B,IAAI,OAAO,MAAM;UACjB,UAAU;UACV,QAAQ;;;;;;;AAOlB","file":"aside.min.js","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.aside', ['mgcrea.ngStrap.modal'])\n\n  .provider('$aside', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade-and-slide-right',\n      prefixClass: 'aside',\n      prefixEvent: 'aside',\n      placement: 'right',\n      template: 'aside/aside.tpl.html',\n      contentTemplate: false,\n      container: false,\n      element: null,\n      backdrop: true,\n      keyboard: true,\n      html: false,\n      show: true\n    };\n\n    this.$get = function($modal) {\n\n      function AsideFactory(config) {\n\n        var $aside = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $aside = $modal(options);\n\n        return $aside;\n\n      }\n\n      return AsideFactory;\n\n    };\n\n  })\n\n  .directive('bsAside', function($window, $sce, $aside) {\n\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n        // Directive options\n        var options = {scope: scope, element: element, show: false};\n        angular.forEach(['template', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content'], function(key) {\n          attr[key] && attr.$observe(key, function(newValue, oldValue) {\n            scope[key] = $sce.trustAsHtml(newValue);\n          });\n        });\n\n        // Support scope as an object\n        attr.bsAside && scope.$watch(attr.bsAside, function(newValue, oldValue) {\n          if(angular.isObject(newValue)) {\n            angular.extend(scope, newValue);\n          } else {\n            scope.content = newValue;\n          }\n        }, true);\n\n        // Initialize aside\n        var aside = $aside(options);\n\n        // Trigger\n        element.on(attr.trigger || 'click', aside.toggle);\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (aside) aside.destroy();\n          options = null;\n          aside = null;\n        });\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}