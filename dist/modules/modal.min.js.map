{"version":3,"sources":["modules/modal.js"],"names":["angular","templateUrl","provider","template","this","defaults","contentTemplate","container","element","backdrop","keyboard","html","show","$get","forEach","trim","requestAnimationFrame","bodyElement","options","$options","extend","config","ModalFactory","enterAnimateCallback","scope","version","minor","$modal","toggle","$isShown","removeClass","prefixClass","focus","modalElement","unbindBackdropEvents","off","hideOnBackdropClick","backdropElement","preventEventDefault","bindKeyboardEvents","on","$onKeyUp","evt","destroyModalElement","modalScope","$destroy","$element","key","promise","trustAsHtml","$scope","$new","$rootScope","$hide","$$postDigest","$id","id","attr","$show","$sce","hide","css","position","bottom","right","z-index","then","compileData","init","data","destroy","after","isElement","parent","$emit","display","placement","animation","link","clonedElement","prefixEvent","defaultPrevented","addClass","$animate","enter","backdropAnimation","el","safeDigest","bindBackdropEvents","leave","leaveAnimateCallback","unbindKeyboardEvents","which","directive","$root","$$phase","$window","restrict","query","document","querySelectorAll","setTimeout","body","isDefined","falseValueRegExp","$observe","newValue","oldValue","bsModal","$watch","content","modal","trigger","$on"],"mappings":"AAOA,YAEAA,SAGMC,OAAAA,wBAAa,sBAAA,sCAAAC,SAAA,SAAA,WAFjB,GAGIC,GAAUC,KAAAC,UACVC,UAAAA,UACAC,kBAAW,UACXC,YAAS,QACTC,YAAU,QACVC,UAAU,MACVC,YAAM,uBACNC,SAAM,GAFRN,iBAAiB,EAKjBF,WAAKS,EAEHL,QAAIM,KACJL,UAAIM,EACJL,UAAIM,EACJL,MAAIM,EAEJL,MAAA,EAJJR,MASMS,MAAIK,UAAiBC,aAAWnB,cAAQoB,WAAqBC,WAAAA,OAAAA,aAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAJjE,QAASC,GAAaD,GA4GpB,QAASE,KAqDLC,EAAGxB,MAAQyB,EAAQC,YAAY,QAAAC,GAyBjCA,QAAOC,KAELD,EAAAA,MAAOE,EAAWF,YAAgBA,QAAOf,GAzD3CK,EAAYa,YAAYZ,EAAQa,YAAc,SA6D9CJ,EAAOK,WACLC,EAAaH,YAAGE,EAAAA,YAAAA,SAAAA,EAAAA,WAsBlB,QAASE,KACJhB,EAAQT,WACTwB,EAAaE,GAAAA,QAAIC,GACjBC,EAAgBF,GAAAA,QAAIC,GACpBC,EAAgBF,GAAAA,QAAIG,IAIxB,QAASC,KACJrB,EAAQR,WACTuB,EAAaO,IAAG,QAASb,GAnE3BU,EAAgBF,IAAI,QAASC,GAC7BC,EAAgBF,IAAI,QAASG,IAGjC,QAqEML,KApEAf,EAAQR,UACVuB,EAAaO,GAAG,QAASb,EAAOc,UAGpC,QAwEIvB,KAvEEA,EAAQR,UA0EZuB,EAASK,IAAAA,QAAoBI,EAAAA,UAI7B,QAASC,GAAAA,GACJhB,EAAAA,SAAOE,EAAYI,gBAEpBC,WA3EJhB,EA2EIgB,SAAAA,EAAAA,QAAAA,EAAAA,QAzEN,QAASI,GAAoBI,GA6EzBA,EAAGE,iBA1EP,QA4EMA,KA3EAjB,EAAOE,UAA6B,OAAjBI,IA8ErBC,IACED,KA3EAW,IACFA,EAAWC,WA+EbD,EAAOjB,MAMTM,IACET,EAAkBA,SAjFhBS,EAAeN,EAAOmB,SAAW,MA/KnCnB,GAAAA,MAGAb,EAASa,EAASR,SAAYnB,QAAAoB,UAAS2B,EAAAA,GACrCC,EAAWD,EAAMvB,SAAMuB,EAAYE,QAAY/B,GAf/CM,EAAQG,EAAOuB,OAAShC,EAAQM,OAASN,EAAQM,MAAM2B,QAAUC,EAAWD,MAmB9E3B,GAAM6B,SAAQnC,EAAAX,YACZiB,EAAM8B,UAAa,QAhBvB3B,EAAO4B,IAAMrC,EAAQsC,IAAMtC,EAAQV,SAAWU,EAAQV,QAAQiD,KAAK,OAAS,GAC5E3C,GAAU,QAAS,WAAa,SAASiC,GAmBjCW,EAAQX,KAAAvB,EAAAuB,GAAAY,EAAAV,YAAA/B,EAAA6B,OAhBhBvB,EAkBMG,MAAOf,WAjBXY,EAAM8B,aAAa,WACjB3B,EAAOiC,UAGXpC,EAkBMG,MAAOC,WAjBXJ,EAAM8B,aAAa,WACjB3B,EAAOf,UAwBTY,EAAIa,QAAAA,WACJA,EAAAA,aAAgBwB,WAAKC,EAAAA,YAjBvBnC,EAiBgEoC,SAAOvC,EAAAK,UAAA,CAhBvE,IAgB8EmC,GAAM/B,EAAAW,EAAOqB,EAAWjE,QAAAQ,QAAA,eAAAU,EAAAa,YAAA,eAqJtG,OAnKAM,GAAgBwB,KAedb,SAAQkB,QACNC,IAAAA,MACAxC,KAAAA,MAbFoC,OAAQ,MAgBRpC,MAAOyC,MAGLH,UAAG/C,OAfP8B,EAiBQrB,KAAOf,SAAAA,GAhBbuD,EAAcE,EACd1C,EAAOyC,SAqBPzC,EAAO2C,KAAAA,WAGL3B,EAAAA,MAGAnB,EAAGa,aAAiB,WAClBA,EAAAA,UAnBNV,EAAO2C,QAAU,WA2Bf3C,IACKA,IAEHU,EAAYkC,SACZlC,EAAWmC,MAzBbhD,EA2BI+C,YAzBN5C,EA2BMf,KAAIM,WA1BR,IA2BMuD,EAAAA,SA3BN,CACA,GA2BMF,GAAQE,CAXd,IAfIzE,QA2BOwE,UAAAtD,EAAAX,YA1BTkE,EA2BIA,EAASlE,UA1BbgE,EA2BIA,EAAQrD,UAAQV,GAAAA,UAAAA,QAAAA,QAAAA,EAAAA,UAAAA,GAAAA,WAAAA,MAzBhBU,EAAQX,WA8BT0B,EAAAA,EAAcU,EAAAA,WAIjBC,EAAAA,EAAajB,IAAOuB,EAAOC,GAAAA,UAAAA,QAAAA,QAAAA,EAAAA,GAAAA,WAAAA,OAIxB3B,EAAMkD,KACPH,EAAArD,EAAAV,SAIgBmE,GAAShC,IAlC7BC,EAkCgD1B,EAAQ0D,OAAAA,OAGtD3C,EAAW4C,EAAAA,SAAWV,EAAAW,KAAAlC,EAAA,SAAAmC,EAAAvD,OACpBA,EAAGN,MAAQT,EAAUuE,YAAA,eAAArD,GAAAsD,iBApCzB,CAGAhD,EAoCIA,KAnCF0C,QAAS,UAsCTO,SAAWzE,EAAAA,WACT0E,EAASC,YApCPlE,EAAQT,UAyCTT,EAAgB0B,SAASR,EAAGmE,mBAtC/BpD,EAwCOiD,SAAAhE,EAAA2D,YAtCL3D,EAAQT,UA0CVkB,EAAOE,MAAAA,EAAiBA,EAAW,MAI/ByD,QAAKrD,QAAAA,OAAa,EACtBjB,EAAAA,MAAAA,EAAsByD,EAAAF,EAAAhD,GAzCtB4D,EAASC,MAAMnD,EAAcwC,EAAQF,GAAOL,KAAK3C,GA8CjDI,EAAGT,SAAQ2D,EAAWhD,UAAA,EA3CxB0D,EA4CItE,EA3CJ,IAAIqE,GAAKrD,EAAa,EA+CpBuD,GAAAA,WACAjD,EAAAA,UAGFtB,EAASM,SAAAA,EAAAA,YAAAA,SACPC,EAAYN,WA9CZD,EAAYiE,SAAShE,EAAQa,YAAc,SAAWb,EAAQ2D,WAkD9DW,IAEAjD,OA5CJZ,EAAOiC,KAoDI,WACLuB,EAASM,WAnDTjE,EAAMkD,MAAMxD,EAAQ8D,YAAc,eAAgBrD,GAAQsD,mBAG1DjF,QAAQyB,QAAQC,OAAS,EAsD3BC,EAAOE,MAAAA,EAAiBA,GAIxBK,EAAAA,MAAAA,GAAAA,KAAAA,GArDEhB,EAAQT,UAyDZ0E,EAASO,MAAAA,GAEPzE,EAAAA,SAAYa,EAAYZ,UAAQa,EAChCwD,EAAGrE,GAvDLgB,IACAyD,OASFhE,EAgEQe,OAAIkD,WA/DVjE,EAgEIA,SAAOiC,EAAAA,OAAAA,EAAAA,QA9DbjC,EAAOK,MAAQ,WACbC,EAAa,GAAGD,SAElBL,EAkEOT,SAAQT,SAAUiC,GACH,KAAhBT,EAAAA,OAAgBN,EAASS,WACzBC,EAAAA,OACAA,EAAAA,oBAlBCV,EAET,QAAS4D,GAAW/D,GAyFrBqE,EAAAA,SAAUrE,EAAAsE,OAAAtE,EAAAsE,MAAAC,SAAWvE,EAASwE,UAG3BC,QAAAA,GAAUC,EAAA1F,GACVgB,MAAOxB,SAAAQ,SAAAA,GAAA2F,UAAAC,iBAAAF,IApST,GASIpF,GAAIkC,QAAUrB,QAGdX,GAFIQ,OAAQG,UAAOuB,KAEKhC,EAAQX,uBAAWyF,EAAAK,YACzCnF,EAAQX,QAAYC,QAAAwF,EAAAG,SAAAG,KAgM1B,OA2FQpF,OAzFT2E,UAyFkCrF,WAASA,UAAAA,OAAAA,SAAAA,SAAAA,EAAAA,EAAAA,GAxF5C,OACEyF,SAAU,MACVzE,OAuFIxB,EAtFJ8E,KAuFM,SAAWyB,EAAexD,EAAO7B,EAAQ6B,GAtF7C,GAAI7B,IA0FFM,MAAIgF,EACJxG,QAAQc,EACNF,MAAGZ,EAKLA,SAAQc,SAAS,WAAS,cAAY,aAASiC,eAAAA,kBAAAA,YAAAA,WAAAA,WAAAA,OAAAA,YAAAA,YAAAA,oBAAAA,KAAAA,cAAAA,eAAAA,SAAAA,GAC7CU,QAAKV,UAAa0D,EAAS1D,MAAK7B,EAASwF,GAAAA,EAAUC,KA1FvD,IAAIH,GAAmB,eACvBxG,SAAQc,SAAU,WAAY,WAAY,OAAQ,aAAe,SAASiC,GA+FnE6D,QAAAA,UAAiBC,EAAOpD,KAAKmD,EAAkBF,KAAAA,EAAUC,MAAAA,EAAAA,IAAAA,KA5FhE3G,QA8FMA,SAAQoB,QAAcsF,WAAAA,SAAAA,GA7F1BjD,EAAKV,IA8FIU,EAAAgD,SAAA1D,EAAA,SAAA2D,EAAAC,GACLnF,EAAMsF,GAAAA,EAAUJ,YAAAA,OAKpBjD,EAAIsD,SAAQpF,EAAOT,OAAAA,EAAAA,QAAAA,SAAAA,EAAAA,GAGnBV,QAAWiD,SAAKuD,GAGhBxF,QAAUJ,OAAAI,EAAYkF,GAEpBxF,EAAAA,QAAUwF,IAlGX,EACH,IAAIK,GAAQpF,EAAOT,EACnBV,GAAQgC,GAAGiB,EAAKuD,SAAW,QAASD,EAAMnF,QAC1CJ,EAAMyF,IAAI,WAAY,WAChBF,GAAOA,EAAMzC,UACjBpD,EAAU,KACV6F,EAAQ","file":"modules/modal.min.js","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.modal', ['mgcrea.ngStrap.core', 'mgcrea.ngStrap.helpers.dimensions'])\n\n  .provider('$modal', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      backdropAnimation: 'am-fade',\n      prefixClass: 'modal',\n      prefixEvent: 'modal',\n      placement: 'top',\n      templateUrl: 'modal/modal.tpl.html',\n      template: '',\n      contentTemplate: false,\n      container: false,\n      element: null,\n      backdrop: true,\n      keyboard: true,\n      html: false,\n      show: true\n    };\n\n    this.$get = function($window, $rootScope, $bsCompiler, $animate, $timeout, $sce, dimensions) {\n\n      var forEach = angular.forEach;\n      var trim = String.prototype.trim;\n      var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n      var bodyElement = angular.element($window.document.body);\n\n      function ModalFactory(config) {\n\n        var $modal = {};\n\n        // Common vars\n        var options = $modal.$options = angular.extend({}, defaults, config);\n        var promise = $modal.$promise = $bsCompiler.compile(options);\n        var scope = $modal.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        if(!options.element && !options.container) {\n          options.container = 'body';\n        }\n\n        // Store $id to identify the triggering element in events\n        // give priority to options.id, otherwise, try to use\n        // element id if defined\n        $modal.$id = options.id || options.element && options.element.attr('id') || '';\n\n        // Support scope as string options\n        forEach(['title', 'content'], function(key) {\n          if(options[key]) scope[key] = $sce.trustAsHtml(options[key]);\n        });\n\n        // Provide scope helpers\n        scope.$hide = function() {\n          scope.$$postDigest(function() {\n            $modal.hide();\n          });\n        };\n        scope.$show = function() {\n          scope.$$postDigest(function() {\n            $modal.show();\n          });\n        };\n        scope.$toggle = function() {\n          scope.$$postDigest(function() {\n            $modal.toggle();\n          });\n        };\n        // Publish isShown as a protected var on scope\n        $modal.$isShown = scope.$isShown = false;\n\n        // Fetch, compile then initialize modal\n        var compileData, modalElement, modalScope;\n        var backdropElement = angular.element('<div class=\"' + options.prefixClass + '-backdrop\"/>');\n        backdropElement.css({position:'fixed', top:'0px', left:'0px', bottom:'0px', right:'0px', 'z-index': 1038});\n        promise.then(function(data) {\n          compileData = data;\n          $modal.init();\n        });\n\n        $modal.init = function() {\n\n          // Options: show\n          if(options.show) {\n            scope.$$postDigest(function() {\n              $modal.show();\n            });\n          }\n\n        };\n\n        $modal.destroy = function() {\n\n          // Remove element\n          destroyModalElement();\n\n          // remove backdrop element\n          if(backdropElement) {\n            backdropElement.remove();\n            backdropElement = null;\n          }\n\n          // Destroy scope\n          scope.$destroy();\n        };\n\n        $modal.show = function() {\n          if($modal.$isShown) return;\n\n          var parent, after;\n          if(angular.isElement(options.container)) {\n            parent = options.container;\n            after = options.container[0].lastChild ? angular.element(options.container[0].lastChild) : null;\n          } else {\n            if (options.container) {\n              parent = findElement(options.container);\n              after = parent[0] && parent[0].lastChild ? angular.element(parent[0].lastChild) : null;\n            } else {\n              parent = null;\n              after = options.element;\n            }\n          }\n\n          // destroy any existing modal elements\n          if(modalElement) destroyModalElement();\n\n          // create a new scope, so we can destroy it and all child scopes\n          // when destroying the modal element\n          modalScope = $modal.$scope.$new();\n          // Fetch a cloned element linked from template (noop callback is required)\n          modalElement = $modal.$element = compileData.link(modalScope, function(clonedElement, scope) {});\n\n          if(scope.$emit(options.prefixEvent + '.show.before', $modal).defaultPrevented) {\n            return;\n          }\n\n          // Set the initial positioning.\n          modalElement.css({display: 'block'}).addClass(options.placement);\n\n          // Options: animation\n          if(options.animation) {\n            if(options.backdrop) {\n              backdropElement.addClass(options.backdropAnimation);\n            }\n            modalElement.addClass(options.animation);\n          }\n\n          if(options.backdrop) {\n            $animate.enter(backdropElement, bodyElement, null);\n          }\n\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if(angular.version.minor <= 2) {\n            $animate.enter(modalElement, parent, after, enterAnimateCallback);\n          } else {\n            $animate.enter(modalElement, parent, after).then(enterAnimateCallback);\n          }\n\n          $modal.$isShown = scope.$isShown = true;\n          safeDigest(scope);\n          // Focus once the enter-animation has started\n          // Weird PhantomJS bug hack\n          var el = modalElement[0];\n          requestAnimationFrame(function() {\n            el.focus();\n          });\n\n          bodyElement.addClass(options.prefixClass + '-open');\n          if(options.animation) {\n            bodyElement.addClass(options.prefixClass + '-with-' + options.animation);\n          }\n\n          // Bind events\n          bindBackdropEvents();\n          bindKeyboardEvents();\n        };\n\n        function enterAnimateCallback() {\n          scope.$emit(options.prefixEvent + '.show', $modal);\n        }\n\n        $modal.hide = function() {\n          if(!$modal.$isShown) return;\n\n          if(scope.$emit(options.prefixEvent + '.hide.before', $modal).defaultPrevented) {\n            return;\n          }\n\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if(angular.version.minor <= 2) {\n            $animate.leave(modalElement, leaveAnimateCallback);\n          } else {\n            $animate.leave(modalElement).then(leaveAnimateCallback);\n          }\n\n          if(options.backdrop) {\n            $animate.leave(backdropElement);\n          }\n          $modal.$isShown = scope.$isShown = false;\n          safeDigest(scope);\n\n          // Unbind events\n          unbindBackdropEvents();\n          unbindKeyboardEvents();\n        };\n\n        function leaveAnimateCallback() {\n          scope.$emit(options.prefixEvent + '.hide', $modal);\n          bodyElement.removeClass(options.prefixClass + '-open');\n          if(options.animation) {\n            bodyElement.removeClass(options.prefixClass + '-with-' + options.animation);\n          }\n        }\n\n        $modal.toggle = function() {\n\n          $modal.$isShown ? $modal.hide() : $modal.show();\n\n        };\n\n        $modal.focus = function() {\n          modalElement[0].focus();\n        };\n\n        // Protected methods\n\n        $modal.$onKeyUp = function(evt) {\n\n          if (evt.which === 27 && $modal.$isShown) {\n            $modal.hide();\n            evt.stopPropagation();\n          }\n\n        };\n\n        function bindBackdropEvents() {\n          if(options.backdrop) {\n            modalElement.on('click', hideOnBackdropClick);\n            backdropElement.on('click', hideOnBackdropClick);\n            backdropElement.on('wheel', preventEventDefault);\n          }\n        }\n\n        function unbindBackdropEvents() {\n          if(options.backdrop) {\n            modalElement.off('click', hideOnBackdropClick);\n            backdropElement.off('click', hideOnBackdropClick);\n            backdropElement.off('wheel', preventEventDefault);\n          }\n        }\n\n        function bindKeyboardEvents() {\n          if(options.keyboard) {\n            modalElement.on('keyup', $modal.$onKeyUp);\n          }\n        }\n\n        function unbindKeyboardEvents() {\n          if(options.keyboard) {\n            modalElement.off('keyup', $modal.$onKeyUp);\n          }\n        }\n\n        // Private helpers\n\n        function hideOnBackdropClick(evt) {\n          if(evt.target !== evt.currentTarget) return;\n          options.backdrop === 'static' ? $modal.focus() : $modal.hide();\n        }\n\n        function preventEventDefault(evt) {\n          evt.preventDefault();\n        }\n\n        function destroyModalElement() {\n          if($modal.$isShown && modalElement !== null) {\n            // un-bind events\n            unbindBackdropEvents();\n            unbindKeyboardEvents();\n          }\n\n          if(modalScope) {\n            modalScope.$destroy();\n            modalScope = null;\n          }\n\n          if(modalElement) {\n            modalElement.remove();\n            modalElement = $modal.$element = null;\n          }\n        }\n\n        return $modal;\n\n      }\n\n      // Helper functions\n\n      function safeDigest(scope) {\n        scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\n      }\n\n      function findElement(query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n\n      return ModalFactory;\n\n    };\n\n  })\n\n  .directive('bsModal', function($window, $sce, $modal) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope, element: element, show: false};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation', 'backdropAnimation', 'id', 'prefixEvent', 'prefixClass'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['backdrop', 'keyboard', 'html', 'container'], function(key) {\n          if(angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key]))\n            options[key] = false;\n        });\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content'], function(key) {\n          attr[key] && attr.$observe(key, function(newValue, oldValue) {\n            scope[key] = $sce.trustAsHtml(newValue);\n          });\n        });\n\n        // Support scope as an object\n        attr.bsModal && scope.$watch(attr.bsModal, function(newValue, oldValue) {\n          if(angular.isObject(newValue)) {\n            angular.extend(scope, newValue);\n          } else {\n            scope.content = newValue;\n          }\n        }, true);\n\n        // Initialize modal\n        var modal = $modal(options);\n\n        // Trigger\n        element.on(attr.trigger || 'click', modal.toggle);\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (modal) modal.destroy();\n          options = null;\n          modal = null;\n        });\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}