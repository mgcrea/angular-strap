{"version":3,"sources":["modules/modal.js"],"names":["angular","placement","provider","templateUrl","this","defaults","template","contentTemplate","container","element","backdrop","keyboard","html","show","size","$get","forEach","requestAnimationFrame","bodyElement","backdropCount","dialogBaseZindex","validSizes","ModalFactory","config","enterAnimateCallback","scope","$emit","options","prefixEvent","$modal","toggle","$isShown","hide","animation","unbindBackdropEvents","modalElement","off","hideOnBackdropClick","backdropElement","preventEventDefault","bindKeyboardEvents","on","$onKeyUp","focus","evt","preventDefault","modalScope","$destroy","$element","$options","extend","key","promise","trustAsHtml","$scope","$new","$rootScope","$hide","$$postDigest","$id","id","attr","$show","$sce","left","bottom","right","prefixClass","css","compileData","init","data","destroy","destroyModalElement","parent","after","isElement","z-index","backdropBaseZindex","link","clonedElement","addClass","customClass","display","findElement","$animate","enter","minor","backdropAnimation","el","then","safeDigest","bindBackdropEvents","version","leave","defaultPrevented","leaveAnimateCallback","removeClass","unbindKeyboardEvents","which","directive","$root","$$phase","$window","restrict","query","document","querySelectorAll","lg","sm","setTimeout","body","isDefined","falseValueRegExp","test","modalClass","$watch","isObject","newValue","oldValue","bsModal","modal","trigger","$on"],"mappings":"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","file":"modules/modal.min.js","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.modal', ['mgcrea.ngStrap.core', 'mgcrea.ngStrap.helpers.dimensions'])\n\n  .provider('$modal', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      backdropAnimation: 'am-fade',\n      customClass: '',\n      prefixClass: 'modal',\n      prefixEvent: 'modal',\n      placement: 'top',\n      templateUrl: 'modal/modal.tpl.html',\n      template: '',\n      contentTemplate: false,\n      container: false,\n      element: null,\n      backdrop: true,\n      keyboard: true,\n      html: false,\n      show: true,\n      size: null\n    };\n\n    this.$get = function ($window, $rootScope, $bsCompiler, $animate, $timeout, $sce, dimensions) {\n\n      var forEach = angular.forEach;\n      var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n      var bodyElement = angular.element($window.document.body);\n\n      var backdropCount = 0;\n      var dialogBaseZindex = 1050;\n      var backdropBaseZindex = 1040;\n\n      var validSizes = {\n        lg: 'modal-lg',\n        sm: 'modal-sm'\n      };\n\n      function ModalFactory (config) {\n\n        var $modal = {};\n\n        // Common vars\n        var options = $modal.$options = angular.extend({}, defaults, config);\n        var promise = $modal.$promise = $bsCompiler.compile(options);\n        var scope = $modal.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        if (!options.element && !options.container) {\n          options.container = 'body';\n        }\n\n        // Store $id to identify the triggering element in events\n        // give priority to options.id, otherwise, try to use\n        // element id if defined\n        $modal.$id = options.id || options.element && options.element.attr('id') || '';\n\n        // Support scope as string options\n        forEach(['title', 'content'], function (key) {\n          if (options[key]) scope[key] = $sce.trustAsHtml(options[key]);\n        });\n\n        // Provide scope helpers\n        scope.$hide = function () {\n          scope.$$postDigest(function () {\n            $modal.hide();\n          });\n        };\n        scope.$show = function () {\n          scope.$$postDigest(function () {\n            $modal.show();\n          });\n        };\n        scope.$toggle = function () {\n          scope.$$postDigest(function () {\n            $modal.toggle();\n          });\n        };\n        // Publish isShown as a protected var on scope\n        $modal.$isShown = scope.$isShown = false;\n\n        // Fetch, compile then initialize modal\n        var compileData;\n        var modalElement;\n        var modalScope;\n        var backdropElement = angular.element('<div class=\"' + options.prefixClass + '-backdrop\"/>');\n        backdropElement.css({position: 'fixed', top: '0px', left: '0px', bottom: '0px', right: '0px'});\n        promise.then(function (data) {\n          compileData = data;\n          $modal.init();\n        });\n\n        $modal.init = function () {\n\n          // Options: show\n          if (options.show) {\n            scope.$$postDigest(function () {\n              $modal.show();\n            });\n          }\n\n        };\n\n        $modal.destroy = function () {\n\n          // Remove element\n          destroyModalElement();\n\n          // remove backdrop element\n          if (backdropElement) {\n            backdropElement.remove();\n            backdropElement = null;\n          }\n\n          // Destroy scope\n          scope.$destroy();\n        };\n\n        $modal.show = function () {\n          if ($modal.$isShown) return;\n\n          var parent;\n          var after;\n          if (angular.isElement(options.container)) {\n            parent = options.container;\n            after = options.container[0].lastChild ? angular.element(options.container[0].lastChild) : null;\n          } else {\n            if (options.container) {\n              parent = findElement(options.container);\n              after = parent[0] && parent[0].lastChild ? angular.element(parent[0].lastChild) : null;\n            } else {\n              parent = null;\n              after = options.element;\n            }\n          }\n\n          // destroy any existing modal elements\n          if (modalElement) destroyModalElement();\n\n          // create a new scope, so we can destroy it and all child scopes\n          // when destroying the modal element\n          modalScope = $modal.$scope.$new();\n          // Fetch a cloned element linked from template (noop callback is required)\n          modalElement = $modal.$element = compileData.link(modalScope, function (clonedElement, scope) {});\n\n          if (options.backdrop) {\n            // set z-index\n            modalElement.css({'z-index': dialogBaseZindex + (backdropCount * 20)});\n            backdropElement.css({'z-index': backdropBaseZindex + (backdropCount * 20)});\n\n            // increment number of backdrops\n            backdropCount++;\n          }\n\n          if (scope.$emit(options.prefixEvent + '.show.before', $modal).defaultPrevented) {\n            return;\n          }\n\n          // Set the initial positioning.\n          modalElement.css({display: 'block'}).addClass(options.placement);\n\n          // Options: customClass\n          if (options.customClass) {\n            modalElement.addClass(options.customClass);\n          }\n\n          // Options: size\n          if (options.size && validSizes[options.size]) {\n            angular.element(findElement('.modal-dialog', modalElement[0])).addClass(validSizes[options.size]);\n          }\n\n          // Options: animation\n          if (options.animation) {\n            if (options.backdrop) {\n              backdropElement.addClass(options.backdropAnimation);\n            }\n            modalElement.addClass(options.animation);\n          }\n\n          if (options.backdrop) {\n            $animate.enter(backdropElement, bodyElement, null);\n          }\n\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if (angular.version.minor <= 2) {\n            $animate.enter(modalElement, parent, after, enterAnimateCallback);\n          } else {\n            $animate.enter(modalElement, parent, after).then(enterAnimateCallback);\n          }\n\n          $modal.$isShown = scope.$isShown = true;\n          safeDigest(scope);\n          // Focus once the enter-animation has started\n          // Weird PhantomJS bug hack\n          var el = modalElement[0];\n          requestAnimationFrame(function () {\n            el.focus();\n          });\n\n          bodyElement.addClass(options.prefixClass + '-open');\n          if (options.animation) {\n            bodyElement.addClass(options.prefixClass + '-with-' + options.animation);\n          }\n\n          // Bind events\n          bindBackdropEvents();\n          bindKeyboardEvents();\n        };\n\n        function enterAnimateCallback () {\n          scope.$emit(options.prefixEvent + '.show', $modal);\n        }\n\n        $modal.hide = function () {\n          if (!$modal.$isShown) return;\n\n          if (options.backdrop) {\n            // decrement number of modals\n            backdropCount--;\n          }\n\n          if (scope.$emit(options.prefixEvent + '.hide.before', $modal).defaultPrevented) {\n            return;\n          }\n\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if (angular.version.minor <= 2) {\n            $animate.leave(modalElement, leaveAnimateCallback);\n          } else {\n            $animate.leave(modalElement).then(leaveAnimateCallback);\n          }\n\n          if (options.backdrop) {\n            $animate.leave(backdropElement);\n          }\n          $modal.$isShown = scope.$isShown = false;\n          safeDigest(scope);\n\n          // Unbind events\n          unbindBackdropEvents();\n          unbindKeyboardEvents();\n        };\n\n        function leaveAnimateCallback () {\n          scope.$emit(options.prefixEvent + '.hide', $modal);\n          bodyElement.removeClass(options.prefixClass + '-open');\n          if (options.animation) {\n            bodyElement.removeClass(options.prefixClass + '-with-' + options.animation);\n          }\n        }\n\n        $modal.toggle = function () {\n          if ($modal.$isShown) {\n            $modal.hide();\n          } else {\n            $modal.show();\n          }\n        };\n\n        $modal.focus = function () {\n          modalElement[0].focus();\n        };\n\n        // Protected methods\n\n        $modal.$onKeyUp = function (evt) {\n\n          if (evt.which === 27 && $modal.$isShown) {\n            $modal.hide();\n            evt.stopPropagation();\n          }\n\n        };\n\n        function bindBackdropEvents () {\n          if (options.backdrop) {\n            modalElement.on('click', hideOnBackdropClick);\n            backdropElement.on('click', hideOnBackdropClick);\n            backdropElement.on('wheel', preventEventDefault);\n          }\n        }\n\n        function unbindBackdropEvents () {\n          if (options.backdrop) {\n            modalElement.off('click', hideOnBackdropClick);\n            backdropElement.off('click', hideOnBackdropClick);\n            backdropElement.off('wheel', preventEventDefault);\n          }\n        }\n\n        function bindKeyboardEvents () {\n          if (options.keyboard) {\n            modalElement.on('keyup', $modal.$onKeyUp);\n          }\n        }\n\n        function unbindKeyboardEvents () {\n          if (options.keyboard) {\n            modalElement.off('keyup', $modal.$onKeyUp);\n          }\n        }\n\n        // Private helpers\n\n        function hideOnBackdropClick (evt) {\n          if (evt.target !== evt.currentTarget) return;\n          if (options.backdrop === 'static') {\n            $modal.focus();\n          } else {\n            $modal.hide();\n          }\n        }\n\n        function preventEventDefault (evt) {\n          evt.preventDefault();\n        }\n\n        function destroyModalElement () {\n          if ($modal.$isShown && modalElement !== null) {\n            // un-bind events\n            unbindBackdropEvents();\n            unbindKeyboardEvents();\n          }\n\n          if (modalScope) {\n            modalScope.$destroy();\n            modalScope = null;\n          }\n\n          if (modalElement) {\n            modalElement.remove();\n            modalElement = $modal.$element = null;\n          }\n        }\n\n        return $modal;\n\n      }\n\n      // Helper functions\n\n      function safeDigest (scope) {\n        /* eslint-disable no-unused-expressions */\n        scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\n        /* eslint-enable no-unused-expressions */\n      }\n\n      function findElement (query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n\n      return ModalFactory;\n\n    };\n\n  })\n\n  .directive('bsModal', function ($window, $sce, $modal) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink (scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope, element: element, show: false};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation', 'backdropAnimation', 'id', 'prefixEvent', 'prefixClass', 'customClass', 'modalClass', 'size'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Options: alias modalClass to customClass\n        if (options.modalClass) {\n          options.customClass = options.modalClass;\n        }\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['backdrop', 'keyboard', 'html', 'container'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content'], function (key) {\n          if (attr[key]) {\n            attr.$observe(key, function (newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n            });\n          }\n        });\n\n        // Support scope as an object\n        if (attr.bsModal) {\n          scope.$watch(attr.bsModal, function (newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n          }, true);\n        }\n\n        // Initialize modal\n        var modal = $modal(options);\n\n        // Trigger\n        element.on(attr.trigger || 'click', modal.toggle);\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (modal) modal.destroy();\n          options = null;\n          modal = null;\n        });\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}