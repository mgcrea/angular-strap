{"version":3,"sources":["modules/modal.js"],"names":["angular","placement","provider","templateUrl","this","defaults","template","contentTemplate","container","element","backdrop","keyboard","html","show","size","zIndex","containerElement","$get","forEach","requestAnimationFrame","bodyElement","layoutHideElement","backdropCount","backdropBaseZindex","$window","$rootScope","$bsCompiler","$animate","$timeout","$sce","dimensions","ModalFactory","config","modalElement","scope","length","attr","onShow","isFunction","options","unbindKeyboardEvents","removeAttr","trigger","hasClass","$modal","$emit","prefixEvent","animation","onHide","removeClass","findElement","findFocusableElements","focusableElements","focusable","offsetWidth","prefixClass","offsetHeight","document","findNextFocusableElement","activeElement","filter","call","querySelectorAll","inReverse","index","undefined","toggle","$isShown","prototype","reverse","indexOf","unbindBackdropEvents","off","hideOnBackdropClick","backdropElement","preventEventDefault","bindKeyboardEvents","on","$onKeyDown","evt","focus","preventDefault","modalScope","$destroy","$element","extend","promise","$promise","compile","$new","dialogBaseZindex","id","returnFocus","parseInt","hide","key","$show","trustAsHtml","$$postDigest","left","bottom","right","css","compileData","init","data","destroy","destroyModalElement","parent","after","isElement","$scope","z-index","link","clonedElement","isDefined","onBeforeShow","display","defaultPrevented","addClass","customClass","validSizes","enter","minor","backdropAnimation","el","enterAnimateCallback","then","safeDigest","bindBackdropEvents","onBeforeHide","leave","leaveAnimateCallback","which","stopPropagation","$onKeyUp","keyCode","nextFocusable","shiftKey","directive","$root","$$phase","$digest","restrict","query","lg","setTimeout","sm","body","$options","falseValueRegExp","test","bsKey","modalClass","$observe","charAt","newValue","oldValue","$eval","$watch","isObject","bsModal","modal","content","$on"],"mappings":"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","file":"modal.min.js","sourcesContent":["'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.modal', ['mgcrea.ngStrap.core', 'mgcrea.ngStrap.helpers.dimensions'])\r\n\r\n  .provider('$modal', function () {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      backdropAnimation: 'am-fade',\r\n      customClass: '',\r\n      prefixClass: 'modal',\r\n      prefixEvent: 'modal',\r\n      placement: 'top',\r\n      templateUrl: 'modal/modal.tpl.html',\r\n      template: '',\r\n      contentTemplate: false,\r\n      container: false,\r\n      element: null,\r\n      backdrop: true,\r\n      keyboard: true,\r\n      html: false,\r\n      show: true,\r\n      size: null,\r\n      zIndex: null,\r\n      containerElement: null\r\n    };\r\n\r\n    this.$get = function ($window, $rootScope, $bsCompiler, $animate, $timeout, $sce, dimensions) {\r\n\r\n      var forEach = angular.forEach;\r\n      var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\r\n      var bodyElement = angular.element($window.document.body);\r\n\r\n      var layoutHideElement = angular.element('#layoutContainer');\r\n\r\n      var backdropCount = 0;\r\n      var dialogBaseZindex = 1050;\r\n      var backdropBaseZindex = 1040;\r\n\r\n      var validSizes = {\r\n        lg: 'modal-lg',\r\n        sm: 'modal-sm'\r\n      };\r\n\r\n      function ModalFactory (config) {\r\n\r\n        var $modal = {};\r\n\r\n        // Common vars\r\n        var options = $modal.$options = angular.extend({}, defaults, config);\r\n\r\n        var promise = $modal.$promise = $bsCompiler.compile(options);\r\n        var scope = $modal.$scope = options.scope && options.scope.$new() || $rootScope.$new();\r\n\r\n        if (options.containerElement) {\r\n          layoutHideElement = angular.element(options.containerElement);\r\n        }\r\n        if (!options.element && !options.container) {\r\n          options.container = 'body';\r\n        }\r\n\r\n        if (options.zIndex) {\r\n          dialogBaseZindex = parseInt(options.zIndex, 10);\r\n          backdropBaseZindex = dialogBaseZindex - 10;\r\n        }\r\n\r\n        // Store $id to identify the triggering element in events\r\n        // give priority to options.id, otherwise, try to use\r\n        // element id if defined\r\n        $modal.$id = options.id || options.element && options.element.attr('id') || '';\r\n\r\n        $modal.returnFocus = function () {\r\n\r\n        };\r\n\r\n        // Support scope as string options\r\n        forEach(['title', 'content'], function (key) {\r\n          if (options[key]) scope[key] = $sce.trustAsHtml(options[key]);\r\n        });\r\n\r\n        // Provide scope helpers\r\n        scope.$hide = function () {\r\n          scope.$$postDigest(function () {\r\n            $modal.hide();\r\n          });\r\n        };\r\n        scope.$show = function () {\r\n          scope.$$postDigest(function () {\r\n            $modal.show();\r\n          });\r\n        };\r\n        scope.$toggle = function () {\r\n          scope.$$postDigest(function () {\r\n            $modal.toggle();\r\n          });\r\n        };\r\n        // Publish isShown as a protected var on scope\r\n        $modal.$isShown = scope.$isShown = false;\r\n\r\n        // Fetch, compile then initialize modal\r\n        var compileData;\r\n        var modalElement;\r\n        var modalScope;\r\n        var backdropElement = angular.element('<div class=\"' + options.prefixClass + '-backdrop\"/>');\r\n        backdropElement.css({\r\n          position: 'fixed',\r\n          top: '0px',\r\n          left: '0px',\r\n          bottom: '0px',\r\n          right: '0px'\r\n        });\r\n        promise.then(function (data) {\r\n          compileData = data;\r\n          $modal.init();\r\n        });\r\n\r\n        $modal.init = function () {\r\n\r\n          // Options: show\r\n          if (options.show) {\r\n            scope.$$postDigest(function () {\r\n              $modal.show();\r\n            });\r\n          }\r\n\r\n        };\r\n\r\n        $modal.destroy = function () {\r\n\r\n          // Remove element\r\n          destroyModalElement();\r\n\r\n          // remove backdrop element\r\n          if (backdropElement) {\r\n            backdropElement.remove();\r\n            backdropElement = null;\r\n          }\r\n\r\n          // Destroy scope\r\n          scope.$destroy();\r\n        };\r\n\r\n        $modal.show = function () {\r\n          if ($modal.$isShown) return;\r\n\r\n          var parent;\r\n          var after;\r\n          if (angular.isElement(options.container)) {\r\n            parent = options.container;\r\n            after = options.container[0].lastChild ? angular.element(options.container[0].lastChild) : null;\r\n          } else {\r\n            if (options.container) {\r\n              parent = findElement(options.container);\r\n              after = parent[0] && parent[0].lastChild ? angular.element(parent[0].lastChild) : null;\r\n            } else {\r\n              parent = null;\r\n              after = options.element;\r\n            }\r\n          }\r\n\r\n          // destroy any existing modal elements\r\n          if (modalElement) destroyModalElement();\r\n\r\n          // create a new scope, so we can destroy it and all child scopes\r\n          // when destroying the modal element\r\n          modalScope = $modal.$scope.$new();\r\n          // Fetch a cloned element linked from template (noop callback is required)\r\n          modalElement = $modal.$element = compileData.link(modalScope, function (clonedElement, scope) {});\r\n\r\n          if (options.backdrop) {\r\n            // set z-index\r\n            modalElement.css({\r\n              'z-index': dialogBaseZindex + (backdropCount * 20)\r\n            });\r\n            backdropElement.css({\r\n              'z-index': backdropBaseZindex + (backdropCount * 20)\r\n            });\r\n\r\n            // increment number of backdrops\r\n            backdropCount++;\r\n          }\r\n\r\n          if (scope.$emit(options.prefixEvent + '.show.before', $modal).defaultPrevented) {\r\n            return;\r\n          }\r\n          if (angular.isDefined(options.onBeforeShow) && angular.isFunction(options.onBeforeShow)) {\r\n            options.onBeforeShow($modal);\r\n          }\r\n\r\n          // Set the initial positioning.\r\n          modalElement.css({\r\n            display: 'block'\r\n          }).addClass(options.placement);\r\n\r\n          // Options: customClass\r\n          if (options.customClass) {\r\n            modalElement.addClass(options.customClass);\r\n          }\r\n\r\n          // Options: size\r\n          if (options.size && validSizes[options.size]) {\r\n            angular.element(findElement('.modal-dialog', modalElement[0])).addClass(validSizes[options.size]);\r\n          }\r\n\r\n          // Options: animation\r\n          if (options.animation) {\r\n            if (options.backdrop) {\r\n              backdropElement.addClass(options.backdropAnimation);\r\n            }\r\n            modalElement.addClass(options.animation);\r\n          }\r\n\r\n          if (options.backdrop) {\r\n            $animate.enter(backdropElement, bodyElement, null);\r\n          }\r\n\r\n          // Support v1.2+ $animate\r\n          // https://github.com/angular/angular.js/issues/11713\r\n          if (angular.version.minor <= 2) {\r\n            $animate.enter(modalElement, parent, after, enterAnimateCallback);\r\n          } else {\r\n            $animate.enter(modalElement, parent, after).then(enterAnimateCallback);\r\n          }\r\n\r\n          $modal.$isShown = scope.$isShown = true;\r\n          safeDigest(scope);\r\n          // Focus once the enter-animation has started\r\n          // Weird PhantomJS bug hack\r\n          var el = modalElement[0];\r\n          requestAnimationFrame(function () {\r\n            el.focus();\r\n          });\r\n\r\n          bodyElement.addClass(options.prefixClass + '-open');\r\n\r\n          layoutHideElement.attr('aria-hidden', 'true');\r\n\r\n          if (options.animation) {\r\n            bodyElement.addClass(options.prefixClass + '-with-' + options.animation);\r\n          }\r\n\r\n          // Bind events\r\n          bindBackdropEvents();\r\n          bindKeyboardEvents();\r\n        };\r\n\r\n        function enterAnimateCallback () {\r\n          scope.$emit(options.prefixEvent + '.show', $modal);\r\n          if (angular.isDefined(options.onShow) && angular.isFunction(options.onShow)) {\r\n            options.onShow($modal);\r\n          }\r\n\r\n          modalElement.attr('aria-hidden', 'false');\r\n          modalElement.attr('tabindex', '0');\r\n          modalElement.trigger('focus');\r\n          if (!modalElement.length || !angular.element(modalElement[0]).hasClass('modal')) {\r\n            layoutHideElement.attr('aria-hidden', 'false');\r\n            unbindKeyboardEvents();\r\n          }\r\n\t\t  if(angular.element(modalElement[0]).hasClass('alert')) {\r\n\t\t\t  modalElement.removeAttr('tabindex');\r\n\t\t  }\r\n        }\r\n\r\n        $modal.hide = function () {\r\n          if (!$modal.$isShown) return;\r\n\r\n          if (scope.$emit(options.prefixEvent + '.hide.before', $modal).defaultPrevented) {\r\n            return;\r\n          }\r\n          if (angular.isDefined(options.onBeforeHide) && angular.isFunction(options.onBeforeHide)) {\r\n            options.onBeforeHide($modal);\r\n          }\r\n\r\n          modalElement.attr('aria-hidden', 'true');\r\n\r\n          if ($modal.returnFocus && typeof $modal.returnFocus === 'function') $modal.returnFocus();\r\n\r\n          // Support v1.2+ $animate\r\n          // https://github.com/angular/angular.js/issues/11713\r\n          if (angular.version.minor <= 2) {\r\n            $animate.leave(modalElement, leaveAnimateCallback);\r\n          } else {\r\n            $animate.leave(modalElement).then(leaveAnimateCallback);\r\n          }\r\n\r\n          if (options.backdrop) {\r\n            // decrement number of backdrops\r\n            backdropCount--;\r\n            $animate.leave(backdropElement);\r\n          }\r\n          $modal.$isShown = scope.$isShown = false;\r\n          safeDigest(scope);\r\n\r\n          // Unbind events\r\n          unbindBackdropEvents();\r\n          unbindKeyboardEvents();\r\n        };\r\n\r\n        function leaveAnimateCallback () {\r\n          scope.$emit(options.prefixEvent + '.hide', $modal);\r\n          if (angular.isDefined(options.onHide) && angular.isFunction(options.onHide)) {\r\n            options.onHide($modal);\r\n          }\r\n          if (findElement('.modal').length <= 0) {\r\n            bodyElement.removeClass(options.prefixClass + '-open');\r\n            layoutHideElement.attr('aria-hidden', 'false');\r\n          }\r\n          if (options.animation) {\r\n            bodyElement.removeClass(options.prefixClass + '-with-' + options.animation);\r\n          }\r\n        }\r\n\r\n        function findFocusableElements () {\r\n          // Add all elements we want to include in our selection\r\n          var focusableElements = 'a:not([disabled]), button:not([disabled]), input:not([disabled]), [tabindex]:not([disabled]):not([tabindex=\"-1\"])';\r\n          if (document.activeElement) {\r\n            var focusable = Array.prototype.filter.call(modalElement[0].querySelectorAll(focusableElements),\r\n              function (element) {\r\n                // Check for visibility while always include the current activeElement\r\n                return element.offsetWidth > 0 || element.offsetHeight > 0 || element === document.activeElement;\r\n              });\r\n\r\n            return focusable;\r\n          }\r\n        }\r\n\r\n        function findNextFocusableElement (inReverse) {\r\n          if (document.activeElement) {\r\n            var focusable = findFocusableElements();\r\n            if (focusable === undefined) return;\r\n            if (inReverse) {\r\n              focusable = Array.prototype.reverse.call(focusable);\r\n            }\r\n\r\n            var index = focusable.indexOf(document.activeElement);\r\n            return focusable[index + 1];\r\n          }\r\n        }\r\n\r\n        $modal.toggle = function () {\r\n          if ($modal.$isShown) {\r\n            $modal.hide();\r\n          } else {\r\n            $modal.show();\r\n          }\r\n        };\r\n\r\n        $modal.focus = function () {\r\n          modalElement[0].focus();\r\n        };\r\n\r\n        // Protected methods\r\n\r\n        $modal.$onKeyUp = function (evt) {\r\n\r\n          // Escape was pressed on an open modal. Hide it.  Backspace key, nothing happen.\r\n          if ((evt.which === 8 || evt.which === 27) && $modal.$isShown) {\r\n            if (evt.which === 27) {\r\n              $modal.hide();\r\n            }\r\n            evt.stopPropagation();\r\n          }\r\n        };\r\n\r\n        $modal.$onKeyDown = function (evt) {\r\n          if (options.keyboard) {\r\n            if (evt.keyCode === 8 && evt.target.tagName !== 'TEXTAREA' && evt.target.tagName !== 'INPUT') {\r\n              evt.preventDefault();\r\n            }\r\n\r\n            if (evt.keyCode === 9) {\r\n\r\n              var nextFocusable = findNextFocusableElement(evt.shiftKey);\r\n              if (nextFocusable === undefined) {\r\n                if (evt.preventDefault) evt.preventDefault();\r\n                if (evt.stopPropagation) evt.stopPropagation();\r\n\r\n                var focusable = findFocusableElements();\r\n                if (evt.shiftKey) {\r\n                  focusable[focusable.length - 1].focus();\r\n                } else {\r\n                  focusable[0].focus();\r\n                }\r\n              }\r\n            }\r\n          }\r\n        };\r\n\r\n        function bindBackdropEvents () {\r\n          if (options.backdrop) {\r\n            modalElement.on('click', hideOnBackdropClick);\r\n            backdropElement.on('click', hideOnBackdropClick);\r\n            backdropElement.on('wheel', preventEventDefault);\r\n          }\r\n        }\r\n\r\n        function unbindBackdropEvents () {\r\n          if (options.backdrop) {\r\n            modalElement.off('click', hideOnBackdropClick);\r\n            backdropElement.off('click', hideOnBackdropClick);\r\n            backdropElement.off('wheel', preventEventDefault);\r\n          }\r\n        }\r\n\r\n        function bindKeyboardEvents () {\r\n          if (options.keyboard) {\r\n            modalElement.on('keyup', $modal.$onKeyUp);\r\n            modalElement.on('keydown', $modal.$onKeyDown);\r\n          }\r\n        }\r\n\r\n        function unbindKeyboardEvents () {\r\n          if (options.keyboard) {\r\n            modalElement.off('keyup', $modal.$onKeyUp);\r\n            modalElement.off('keydown', $modal.$onKeyDown);\r\n          }\r\n        }\r\n\r\n        // Private helpers\r\n\r\n        function hideOnBackdropClick (evt) {\r\n          if (evt.target !== evt.currentTarget) return;\r\n          if (options.backdrop === 'static') {\r\n            $modal.focus();\r\n          } else {\r\n            $modal.hide();\r\n          }\r\n        }\r\n\r\n        function preventEventDefault (evt) {\r\n          evt.preventDefault();\r\n        }\r\n\r\n        function destroyModalElement () {\r\n          if ($modal.$isShown && modalElement !== null) {\r\n            // un-bind events\r\n            unbindBackdropEvents();\r\n            unbindKeyboardEvents();\r\n          }\r\n\r\n          if (modalScope) {\r\n            modalScope.$destroy();\r\n            modalScope = null;\r\n          }\r\n\r\n          if (modalElement) {\r\n            modalElement.remove();\r\n            modalElement = $modal.$element = null;\r\n          }\r\n        }\r\n\r\n        return $modal;\r\n\r\n      }\r\n\r\n      // Helper functions\r\n\r\n      function safeDigest (scope) {\r\n        /* eslint-disable no-unused-expressions */\r\n        scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\r\n        /* eslint-enable no-unused-expressions */\r\n      }\r\n\r\n      function findElement (query, element) {\r\n        return angular.element((element || document).querySelectorAll(query));\r\n      }\r\n\r\n      return ModalFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsModal', function ($window, $sce, $parse, $modal) {\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      scope: true,\r\n      link: function postLink (scope, element, attr, transclusion) {\r\n\r\n        // Directive options\r\n        var options = {\r\n          scope: scope,\r\n          element: element,\r\n          show: false\r\n        };\r\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation', 'backdropAnimation', 'id', 'prefixEvent', 'prefixClass', 'customClass', 'modalClass', 'size', 'zIndex'], function (key) {\r\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Options: alias modalClass to customClass\r\n        if (options.modalClass) {\r\n          options.customClass = options.modalClass;\r\n        }\r\n\r\n        // use string regex match boolean attr falsy values, leave truthy values be\r\n        var falseValueRegExp = /^(false|0|)$/i;\r\n        angular.forEach(['backdrop', 'keyboard', 'html', 'container'], function (key) {\r\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\r\n        });\r\n\r\n        // bind functions from the attrs to the show and hide events\r\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\r\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\r\n          if (angular.isDefined(attr[bsKey])) {\r\n            options[key] = scope.$eval(attr[bsKey]);\r\n          }\r\n        });\r\n\r\n        // Support scope as data-attrs\r\n        angular.forEach(['title', 'content'], function (key) {\r\n          if (attr[key]) {\r\n            attr.$observe(key, function (newValue, oldValue) {\r\n              scope[key] = $sce.trustAsHtml(newValue);\r\n            });\r\n          }\r\n        });\r\n\r\n        // Support scope as an object\r\n        if (attr.bsModal) {\r\n          scope.$watch(attr.bsModal, function (newValue, oldValue) {\r\n            if (angular.isObject(newValue)) {\r\n              angular.extend(scope, newValue);\r\n            } else {\r\n              scope.content = newValue;\r\n            }\r\n          }, true);\r\n        }\r\n\r\n        // Initialize modal\r\n        var modal = $modal(options);\r\n\r\n        if (options.keyboard) {\r\n          modal.returnFocus = function () {\r\n            element[0].focus();\r\n          };\r\n        }\r\n\r\n        // Trigger\r\n        element.on(attr.trigger || 'click', modal.toggle);\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function () {\r\n          if (modal) modal.destroy();\r\n          options = null;\r\n          modal = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n"]}