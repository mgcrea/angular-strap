{"version":3,"sources":["modules/modal.js"],"names":["angular","placement","provider","templateUrl","this","defaults","template","contentTemplate","container","element","backdrop","keyboard","html","show","size","$get","forEach","requestAnimationFrame","bodyElement","backdropCount","dialogBaseZindex","validSizes","ModalFactory","config","$modal","scope","options","onShow","$emit","prefixEvent","isDefined","onHide","isFunction","toggle","hide","animation","unbindBackdropEvents","modalElement","off","hideOnBackdropClick","backdropElement","preventEventDefault","bindKeyboardEvents","on","$onKeyUp","focus","evt","preventDefault","modalScope","$isShown","$destroy","$element","$options","extend","key","promise","trustAsHtml","$scope","$new","$rootScope","$hide","$$postDigest","$id","id","attr","$show","$sce","left","bottom","right","prefixClass","css","compileData","init","data","destroy","destroyModalElement","parent","after","isElement","z-index","backdropBaseZindex","link","clonedElement","onBeforeShow","display","defaultPrevented","addClass","customClass","findElement","$animate","enter","minor","backdropAnimation","el","enterAnimateCallback","then","safeDigest","bindBackdropEvents","onBeforeHide","leave","leaveAnimateCallback","version","which","directive","$root","$$phase","$digest","restrict","query","document","querySelectorAll","lg","sm","$window","setTimeout","body","falseValueRegExp","test","bsKey","modalClass","$observe","charAt","newValue","oldValue","$eval","$watch","isObject","bsModal","modal","trigger","$on"],"mappings":"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","file":"modules/modal.min.js","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.modal', ['mgcrea.ngStrap.core', 'mgcrea.ngStrap.helpers.dimensions'])\n\n  .provider('$modal', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      backdropAnimation: 'am-fade',\n      customClass: '',\n      prefixClass: 'modal',\n      prefixEvent: 'modal',\n      placement: 'top',\n      templateUrl: 'modal/modal.tpl.html',\n      template: '',\n      contentTemplate: false,\n      container: false,\n      element: null,\n      backdrop: true,\n      keyboard: true,\n      html: false,\n      show: true,\n      size: null\n    };\n\n    this.$get = function ($window, $rootScope, $bsCompiler, $animate, $timeout, $sce, dimensions) {\n\n      var forEach = angular.forEach;\n      var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n      var bodyElement = angular.element($window.document.body);\n\n      var backdropCount = 0;\n      var dialogBaseZindex = 1050;\n      var backdropBaseZindex = 1040;\n\n      var validSizes = {\n        lg: 'modal-lg',\n        sm: 'modal-sm'\n      };\n\n      function ModalFactory (config) {\n\n        var $modal = {};\n\n        // Common vars\n        var options = $modal.$options = angular.extend({}, defaults, config);\n        var promise = $modal.$promise = $bsCompiler.compile(options);\n        var scope = $modal.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        if (!options.element && !options.container) {\n          options.container = 'body';\n        }\n\n        // Store $id to identify the triggering element in events\n        // give priority to options.id, otherwise, try to use\n        // element id if defined\n        $modal.$id = options.id || options.element && options.element.attr('id') || '';\n\n        // Support scope as string options\n        forEach(['title', 'content'], function (key) {\n          if (options[key]) scope[key] = $sce.trustAsHtml(options[key]);\n        });\n\n        // Provide scope helpers\n        scope.$hide = function () {\n          scope.$$postDigest(function () {\n            $modal.hide();\n          });\n        };\n        scope.$show = function () {\n          scope.$$postDigest(function () {\n            $modal.show();\n          });\n        };\n        scope.$toggle = function () {\n          scope.$$postDigest(function () {\n            $modal.toggle();\n          });\n        };\n        // Publish isShown as a protected var on scope\n        $modal.$isShown = scope.$isShown = false;\n\n        // Fetch, compile then initialize modal\n        var compileData;\n        var modalElement;\n        var modalScope;\n        var backdropElement = angular.element('<div class=\"' + options.prefixClass + '-backdrop\"/>');\n        backdropElement.css({position: 'fixed', top: '0px', left: '0px', bottom: '0px', right: '0px'});\n        promise.then(function (data) {\n          compileData = data;\n          $modal.init();\n        });\n\n        $modal.init = function () {\n\n          // Options: show\n          if (options.show) {\n            scope.$$postDigest(function () {\n              $modal.show();\n            });\n          }\n\n        };\n\n        $modal.destroy = function () {\n\n          // Remove element\n          destroyModalElement();\n\n          // remove backdrop element\n          if (backdropElement) {\n            backdropElement.remove();\n            backdropElement = null;\n          }\n\n          // Destroy scope\n          scope.$destroy();\n        };\n\n        $modal.show = function () {\n          if ($modal.$isShown) return;\n\n          var parent;\n          var after;\n          if (angular.isElement(options.container)) {\n            parent = options.container;\n            after = options.container[0].lastChild ? angular.element(options.container[0].lastChild) : null;\n          } else {\n            if (options.container) {\n              parent = findElement(options.container);\n              after = parent[0] && parent[0].lastChild ? angular.element(parent[0].lastChild) : null;\n            } else {\n              parent = null;\n              after = options.element;\n            }\n          }\n\n          // destroy any existing modal elements\n          if (modalElement) destroyModalElement();\n\n          // create a new scope, so we can destroy it and all child scopes\n          // when destroying the modal element\n          modalScope = $modal.$scope.$new();\n          // Fetch a cloned element linked from template (noop callback is required)\n          modalElement = $modal.$element = compileData.link(modalScope, function (clonedElement, scope) {});\n\n          if (options.backdrop) {\n            // set z-index\n            modalElement.css({'z-index': dialogBaseZindex + (backdropCount * 20)});\n            backdropElement.css({'z-index': backdropBaseZindex + (backdropCount * 20)});\n\n            // increment number of backdrops\n            backdropCount++;\n          }\n\n          if (scope.$emit(options.prefixEvent + '.show.before', $modal).defaultPrevented) {\n            return;\n          }\n          if (angular.isDefined(options.onBeforeShow) && angular.isFunction(options.onBeforeShow)) {\n            options.onBeforeShow($modal);\n          }\n\n          // Set the initial positioning.\n          modalElement.css({display: 'block'}).addClass(options.placement);\n\n          // Options: customClass\n          if (options.customClass) {\n            modalElement.addClass(options.customClass);\n          }\n\n          // Options: size\n          if (options.size && validSizes[options.size]) {\n            angular.element(findElement('.modal-dialog', modalElement[0])).addClass(validSizes[options.size]);\n          }\n\n          // Options: animation\n          if (options.animation) {\n            if (options.backdrop) {\n              backdropElement.addClass(options.backdropAnimation);\n            }\n            modalElement.addClass(options.animation);\n          }\n\n          if (options.backdrop) {\n            $animate.enter(backdropElement, bodyElement, null);\n          }\n\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if (angular.version.minor <= 2) {\n            $animate.enter(modalElement, parent, after, enterAnimateCallback);\n          } else {\n            $animate.enter(modalElement, parent, after).then(enterAnimateCallback);\n          }\n\n          $modal.$isShown = scope.$isShown = true;\n          safeDigest(scope);\n          // Focus once the enter-animation has started\n          // Weird PhantomJS bug hack\n          var el = modalElement[0];\n          requestAnimationFrame(function () {\n            el.focus();\n          });\n\n          bodyElement.addClass(options.prefixClass + '-open');\n          if (options.animation) {\n            bodyElement.addClass(options.prefixClass + '-with-' + options.animation);\n          }\n\n          // Bind events\n          bindBackdropEvents();\n          bindKeyboardEvents();\n        };\n\n        function enterAnimateCallback () {\n          scope.$emit(options.prefixEvent + '.show', $modal);\n          if (angular.isDefined(options.onShow) && angular.isFunction(options.onShow)) {\n            options.onShow($modal);\n          }\n        }\n\n        $modal.hide = function () {\n          if (!$modal.$isShown) return;\n\n          if (options.backdrop) {\n            // decrement number of modals\n            backdropCount--;\n          }\n\n          if (scope.$emit(options.prefixEvent + '.hide.before', $modal).defaultPrevented) {\n            return;\n          }\n          if (angular.isDefined(options.onBeforeHide) && angular.isFunction(options.onBeforeHide)) {\n            options.onBeforeHide($modal);\n          }\n\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if (angular.version.minor <= 2) {\n            $animate.leave(modalElement, leaveAnimateCallback);\n          } else {\n            $animate.leave(modalElement).then(leaveAnimateCallback);\n          }\n\n          if (options.backdrop) {\n            $animate.leave(backdropElement);\n          }\n          $modal.$isShown = scope.$isShown = false;\n          safeDigest(scope);\n\n          // Unbind events\n          unbindBackdropEvents();\n          unbindKeyboardEvents();\n        };\n\n        function leaveAnimateCallback () {\n          scope.$emit(options.prefixEvent + '.hide', $modal);\n          if (angular.isDefined(options.onHide) && angular.isFunction(options.onHide)) {\n            options.onHide($modal);\n          }\n          bodyElement.removeClass(options.prefixClass + '-open');\n          if (options.animation) {\n            bodyElement.removeClass(options.prefixClass + '-with-' + options.animation);\n          }\n        }\n\n        $modal.toggle = function () {\n          if ($modal.$isShown) {\n            $modal.hide();\n          } else {\n            $modal.show();\n          }\n        };\n\n        $modal.focus = function () {\n          modalElement[0].focus();\n        };\n\n        // Protected methods\n\n        $modal.$onKeyUp = function (evt) {\n\n          if (evt.which === 27 && $modal.$isShown) {\n            $modal.hide();\n            evt.stopPropagation();\n          }\n\n        };\n\n        function bindBackdropEvents () {\n          if (options.backdrop) {\n            modalElement.on('click', hideOnBackdropClick);\n            backdropElement.on('click', hideOnBackdropClick);\n            backdropElement.on('wheel', preventEventDefault);\n          }\n        }\n\n        function unbindBackdropEvents () {\n          if (options.backdrop) {\n            modalElement.off('click', hideOnBackdropClick);\n            backdropElement.off('click', hideOnBackdropClick);\n            backdropElement.off('wheel', preventEventDefault);\n          }\n        }\n\n        function bindKeyboardEvents () {\n          if (options.keyboard) {\n            modalElement.on('keyup', $modal.$onKeyUp);\n          }\n        }\n\n        function unbindKeyboardEvents () {\n          if (options.keyboard) {\n            modalElement.off('keyup', $modal.$onKeyUp);\n          }\n        }\n\n        // Private helpers\n\n        function hideOnBackdropClick (evt) {\n          if (evt.target !== evt.currentTarget) return;\n          if (options.backdrop === 'static') {\n            $modal.focus();\n          } else {\n            $modal.hide();\n          }\n        }\n\n        function preventEventDefault (evt) {\n          evt.preventDefault();\n        }\n\n        function destroyModalElement () {\n          if ($modal.$isShown && modalElement !== null) {\n            // un-bind events\n            unbindBackdropEvents();\n            unbindKeyboardEvents();\n          }\n\n          if (modalScope) {\n            modalScope.$destroy();\n            modalScope = null;\n          }\n\n          if (modalElement) {\n            modalElement.remove();\n            modalElement = $modal.$element = null;\n          }\n        }\n\n        return $modal;\n\n      }\n\n      // Helper functions\n\n      function safeDigest (scope) {\n        /* eslint-disable no-unused-expressions */\n        scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\n        /* eslint-enable no-unused-expressions */\n      }\n\n      function findElement (query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n\n      return ModalFactory;\n\n    };\n\n  })\n\n  .directive('bsModal', function ($window, $sce, $parse, $modal) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink (scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope, element: element, show: false};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation', 'backdropAnimation', 'id', 'prefixEvent', 'prefixClass', 'customClass', 'modalClass', 'size'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Options: alias modalClass to customClass\n        if (options.modalClass) {\n          options.customClass = options.modalClass;\n        }\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['backdrop', 'keyboard', 'html', 'container'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n\n        // bind functions from the attrs to the show and hide events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content'], function (key) {\n          if (attr[key]) {\n            attr.$observe(key, function (newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n            });\n          }\n        });\n\n        // Support scope as an object\n        if (attr.bsModal) {\n          scope.$watch(attr.bsModal, function (newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n          }, true);\n        }\n\n        // Initialize modal\n        var modal = $modal(options);\n\n        // Trigger\n        element.on(attr.trigger || 'click', modal.toggle);\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (modal) modal.destroy();\n          options = null;\n          modal = null;\n        });\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}