{"version":3,"sources":["collapse/collapse.js"],"names":[],"mappings":"qBASM,OAAA,uCAEF,YAAA,WAEA,GAAA,GAAA,KAAA,UACE,UAAA,gCAEA,YAAA,KACA,gBAAA,GAGA,EAAA,KAAA,WAAA,SAAA,EAAA,EAAA,yCAKA,QAAA,SAAA,YAAA,iBAAA,cAAA,kBAAA,SAAA,mDAIA,EAAA,YACA,EAAA,YAEA,EAAA,wBAEA,EAAA,gBAAA,SAAA,GACA,EAAA,SAAA,KAAA,MAEI,gBAAA,SAAA,GACF,EAAA,SAAA,KAAA,MAGA,SAAA,QAAA,EAAA,SAAA,eAAA,GAAA,IACE,WAAA,EAAA,WAAA,SAAA,GAIN,EAAA,SAAA,QAHI,EAAA,SAAA,eAGJ,EAFE,EAAA,SAAA,UAAA,EAAA,GAAA,EAIF,EAAA,qBAAA,QAAA,SAAA,GACE,OAMJ,MAAA,KAAA,mBAIE,OAFF,GAAY,SAAa,iBAEvB,eAKE,cAAA,UAAA,WAAA,YAAA,SAAA,EAAA,EAAA,GAEE,EAAA,yBAGA,WAAA,0EAEE,SAAA,EAAA,EAAA,EAAA,MAEE,GAAA,EAAA,GACF,EAAA,EAAA,EAEA,OAGE,qBAAA,KAAA,aACE,cAAA,EAAA,SAAA,2EAOR,EAAA,WAAA,EAAA,uBAYE,mBAAA,2BAGA,YAAA,sCAGA,GACA,IADA,EAAA,GACA,EAAA,MAGE,KAAA,cAAA,YAGJ,EAAA,gBAAA,GACF,EAAA,GAAA,QAAA,0DAEF,GAAA,WAAA,EAAA,8BASM,oBAAA,WAAA,SAAA,mBAGA,YAAA,8CAkBE,KACF,GAAA,GAAA,EAAA,SAAA,QAAA,GACA,EAAA,EAAA,SAAA,oEAhBA,GACE,IADF,EAAA,GACE,EAAA,GAGF,GAAA,SAAA,YAGA,EAAA,SAAA,WACE,EAAA,SAAA,EAAA,SAAA,uEAaP","file":"collapse.min.js","sourcesContent":["'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.collapse', [])\r\n\r\n  .provider('$collapse', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-collapse',\r\n      disallowToggle: false,\r\n      activeClass: 'in',\r\n      startCollapsed: false\r\n    };\r\n\r\n    var controller = this.controller = function($scope, $element, $attrs) {\r\n      var self = this;\r\n\r\n      // Attributes options\r\n      self.$options = angular.copy(defaults);\r\n      angular.forEach(['animation', 'disallowToggle', 'activeClass', 'startCollapsed'], function (key) {\r\n        if(angular.isDefined($attrs[key])) self.$options[key] = $attrs[key];\r\n      });\r\n\r\n      self.$toggles = [];\r\n      self.$targets = [];\r\n\r\n      self.$viewChangeListeners = [];\r\n\r\n      self.$registerToggle = function(element) {\r\n        self.$toggles.push(element);\r\n      };\r\n      self.$registerTarget = function(element) {\r\n        self.$targets.push(element);\r\n      };\r\n\r\n      self.$targets.$active = !self.$options.startCollapsed ? 0 : -1;\r\n      self.$setActive = $scope.$setActive = function(value) {\r\n        if(!self.$options.disallowToggle) {\r\n          self.$targets.$active = self.$targets.$active === value ? -1 : value;\r\n        } else {\r\n          self.$targets.$active = value;\r\n        }\r\n        self.$viewChangeListeners.forEach(function(fn) {\r\n          fn();\r\n        });\r\n      };\r\n\r\n    };\r\n\r\n    this.$get = function() {\r\n      var $collapse = {};\r\n      $collapse.defaults = defaults;\r\n      $collapse.controller = controller;\r\n      return $collapse;\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsCollapse', function($window, $animate, $collapse) {\r\n\r\n    var defaults = $collapse.defaults;\r\n\r\n    return {\r\n      require: ['?ngModel', 'bsCollapse'],\r\n      controller: ['$scope', '$element', '$attrs', $collapse.controller],\r\n      link: function postLink(scope, element, attrs, controllers) {\r\n\r\n        var ngModelCtrl = controllers[0];\r\n        var bsCollapseCtrl = controllers[1];\r\n\r\n        if(ngModelCtrl) {\r\n\r\n          // Update the modelValue following\r\n          bsCollapseCtrl.$viewChangeListeners.push(function() {\r\n            ngModelCtrl.$setViewValue(bsCollapseCtrl.$targets.$active);\r\n          });\r\n\r\n          // modelValue -> $formatters -> viewValue\r\n          ngModelCtrl.$formatters.push(function(modelValue) {\r\n            // console.warn('$formatter(\"%s\"): modelValue=%o (%o)', element.attr('ng-model'), modelValue, typeof modelValue);\r\n            if (bsCollapseCtrl.$targets.$active !== modelValue * 1) {\r\n              bsCollapseCtrl.$setActive(modelValue * 1);\r\n            }\r\n            return modelValue;\r\n          });\r\n\r\n        }\r\n\r\n      }\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsCollapseToggle', function() {\r\n\r\n    return {\r\n      require: ['^?ngModel', '^bsCollapse'],\r\n      link: function postLink(scope, element, attrs, controllers) {\r\n\r\n        var ngModelCtrl = controllers[0];\r\n        var bsCollapseCtrl = controllers[1];\r\n\r\n        // Add base attr\r\n        element.attr('data-toggle', 'collapse');\r\n\r\n        // Push pane to parent bsCollapse controller\r\n        bsCollapseCtrl.$registerToggle(element);\r\n        element.on('click', function() {\r\n          var index = attrs.bsCollapseToggle || bsCollapseCtrl.$toggles.indexOf(element);\r\n          bsCollapseCtrl.$setActive(index * 1);\r\n          scope.$apply();\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsCollapseTarget', function($animate) {\r\n\r\n    return {\r\n      require: ['^?ngModel', '^bsCollapse'],\r\n      // scope: true,\r\n      link: function postLink(scope, element, attrs, controllers) {\r\n\r\n        var ngModelCtrl = controllers[0];\r\n        var bsCollapseCtrl = controllers[1];\r\n\r\n        // Add base class\r\n        element.addClass('collapse');\r\n\r\n        // Add animation class\r\n        if(bsCollapseCtrl.$options.animation) {\r\n          element.addClass(bsCollapseCtrl.$options.animation);\r\n        }\r\n\r\n        // Push pane to parent bsCollapse controller\r\n        bsCollapseCtrl.$registerTarget(element);\r\n\r\n        function render() {\r\n          var index = bsCollapseCtrl.$targets.indexOf(element);\r\n          var active = bsCollapseCtrl.$targets.$active;\r\n          $animate[index === active ? 'addClass' : 'removeClass'](element, bsCollapseCtrl.$options.activeClass);\r\n        }\r\n\r\n        bsCollapseCtrl.$viewChangeListeners.push(function() {\r\n          render();\r\n        });\r\n        render();\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n"],"sourceRoot":"/source/"}