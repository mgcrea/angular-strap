{"version":3,"file":"collapse.min.js","sources":["collapse/collapse.js"],"names":[],"mappings":"qBASM,OAAA,iEAIA,GAAA,KAAA,kCAEA,gBAAA,EACA,YAAA,MAGA,EAAA,KAAA,WAAA,SAAA,EAAA,EAAA,yCAKA,QAAA,SAAA,YAAA,iBAAA,eAAA,SAAA,mDAIA,EAAA,YACA,EAAA,YAEA,EAAA,wBAEA,EAAA,gBAAA,SAAA,GACA,EAAA,SAAA,KAAA,MAEI,gBAAA,SAAA,GACF,EAAA,SAAA,KAAA,MAGA,SAAA,QAAA,IACE,WAAA,EAAA,WAAA,SAAA,GAIN,EAAA,SAAA,QAHI,EAAA,SAAA,eAGJ,EAFE,EAAA,SAAA,UAAA,EAAA,GAAA,EAIF,EAAA,qBAAA,QAAA,SAAA,GACE,OAMJ,MAAA,KAAA,mBAIE,OAFF,GAAA,SAAyB,iBAEvB,eAKE,cAAA,UAAA,WAAA,YAAA,SAAA,EAAA,EAAA,GAEE,EAAA,yBAGA,WAAA,0EAEE,SAAA,EAAA,EAAA,EAAA,MAEE,GAAA,EAAA,GACF,EAAA,EAAA,EAEA,OAGE,qBAAA,KAAA,WACA,EAAA,cAAA,EAAA,SAAA,gDAMR,GAAA,WAAA,EAAA,uBAWI,mBAAA,2BAGA,YAAA,sCAGA,GACA,IADA,EAAA,GACA,EAAA,MAGE,KAAA,cAAA,YAGJ,EAAA,gBAAA,GACF,EAAA,GAAA,QAAA,0DAEF,GAAA,WAAA,EAAA,8BASM,oBAAA,WAAA,SAAA,mBAGA,YAAA,8CAkBE,KACF,GAAA,GAAA,EAAA,SAAA,QAAA,GACA,EAAA,EAAA,SAAA,oEAhBA,GACE,IADF,EAAA,GACE,EAAA,GAGF,GAAA,SAAA,YAGA,EAAA,SAAA,WACE,EAAA,SAAA,EAAA,SAAA,uEAaP","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.collapse', [])\n\n  .provider('$collapse', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-collapse',\n      disallowToggle: false,\n      activeClass: 'in'\n    };\n\n    var controller = this.controller = function($scope, $element, $attrs) {\n      var self = this;\n\n      // Attributes options\n      self.$options = angular.copy(defaults);\n      angular.forEach(['animation', 'disallowToggle', 'activeClass'], function(key) {\n        if(angular.isDefined($attrs[key])) self.$options[key] = $attrs[key];\n      });\n\n      self.$toggles = [];\n      self.$targets = [];\n\n      self.$viewChangeListeners = [];\n\n      self.$registerToggle = function(element) {\n        self.$toggles.push(element);\n      };\n      self.$registerTarget = function(element) {\n        self.$targets.push(element);\n      };\n\n      self.$targets.$active = 0;\n      self.$setActive = $scope.$setActive = function(value) {\n        if(!self.$options.disallowToggle) {\n          self.$targets.$active = self.$targets.$active === value ? -1 : value;\n        } else {\n          self.$targets.$active = value;\n        }\n        self.$viewChangeListeners.forEach(function(fn) {\n          fn();\n        });\n      };\n\n    };\n\n    this.$get = function() {\n      var $collapse = {};\n      $collapse.defaults = defaults;\n      $collapse.controller = controller;\n      return $collapse;\n    };\n\n  })\n\n  .directive('bsCollapse', function($window, $animate, $collapse) {\n\n    var defaults = $collapse.defaults;\n\n    return {\n      require: ['?ngModel', 'bsCollapse'],\n      controller: ['$scope', '$element', '$attrs', $collapse.controller],\n      link: function postLink(scope, element, attrs, controllers) {\n\n        var ngModelCtrl = controllers[0];\n        var bsCollapseCtrl = controllers[1];\n\n        if(ngModelCtrl) {\n\n          // Update the modelValue following\n          bsCollapseCtrl.$viewChangeListeners.push(function() {\n            ngModelCtrl.$setViewValue(bsCollapseCtrl.$targets.$active);\n          });\n\n          // modelValue -> $formatters -> viewValue\n          ngModelCtrl.$formatters.push(function(modelValue) {\n            // console.warn('$formatter(\"%s\"): modelValue=%o (%o)', element.attr('ng-model'), modelValue, typeof modelValue);\n            bsCollapseCtrl.$setActive(modelValue * 1);\n            return modelValue;\n          });\n\n        }\n\n      }\n    };\n\n  })\n\n  .directive('bsCollapseToggle', function() {\n\n    return {\n      require: ['^?ngModel', '^bsCollapse'],\n      link: function postLink(scope, element, attrs, controllers) {\n\n        var ngModelCtrl = controllers[0];\n        var bsCollapseCtrl = controllers[1];\n\n        // Add base attr\n        element.attr('data-toggle', 'collapse');\n\n        // Push pane to parent bsCollapse controller\n        bsCollapseCtrl.$registerToggle(element);\n        element.on('click', function() {\n          var index = attrs.bsCollapseToggle || bsCollapseCtrl.$toggles.indexOf(element);\n          bsCollapseCtrl.$setActive(index * 1);\n          scope.$apply();\n        });\n\n      }\n    };\n\n  })\n\n  .directive('bsCollapseTarget', function($animate) {\n\n    return {\n      require: ['^?ngModel', '^bsCollapse'],\n      // scope: true,\n      link: function postLink(scope, element, attrs, controllers) {\n\n        var ngModelCtrl = controllers[0];\n        var bsCollapseCtrl = controllers[1];\n\n        // Add base class\n        element.addClass('collapse');\n\n        // Add animation class\n        if(bsCollapseCtrl.$options.animation) {\n          element.addClass(bsCollapseCtrl.$options.animation);\n        }\n\n        // Push pane to parent bsCollapse controller\n        bsCollapseCtrl.$registerTarget(element);\n\n        function render() {\n          var index = bsCollapseCtrl.$targets.indexOf(element);\n          var active = bsCollapseCtrl.$targets.$active;\n          $animate[index === active ? 'addClass' : 'removeClass'](element, bsCollapseCtrl.$options.activeClass);\n        }\n\n        bsCollapseCtrl.$viewChangeListeners.push(function() {\n          render();\n        });\n        render();\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}