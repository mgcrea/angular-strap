{"version":3,"sources":["navbar/navbar.js"],"names":["angular","module","provider","defaults","this","activeClass","routeAttr","strict","$get","directive","$window","$location","$navbar","restrict","link","scope","element","attr","options","copy","forEach","Object","keys","key","isDefined","$watch","path","newValue","liElements","querySelectorAll","li","liElement","pattern","replace","regexp","RegExp","test","addClass","removeClass"],"mappings":"AAOA,YACAA,SAAQC,OAAO,4BAA6BC,SAAS,UAAW,WAC9D,GAAIC,GAAWC,KAAKD,UAChBE,YAAa,SACbC,UAAW,mBACXC,QAAQ,EAEZH,MAAKI,KAAO,WACV,OAASL,SAAUA,MAEpBM,UAAU,YACX,UACA,YACA,UACA,SAAUC,EAASC,EAAWC,GAC5B,GAAIT,GAAWS,EAAQT,QACvB,QACEU,SAAU,IACVC,KAAM,SAAkBC,EAAOC,EAASC,GAEtC,GAAIC,GAAUlB,QAAQmB,KAAKhB,EAC3BH,SAAQoB,QAAQC,OAAOC,KAAKnB,GAAW,SAAUoB,GAC3CvB,QAAQwB,UAAUP,EAAKM,MACzBL,EAAQK,GAAON,EAAKM,MAGxBR,EAAMU,OAAO,WACX,MAAOd,GAAUe,QAChB,SAAUC,GACX,GAAIC,GAAaZ,EAAQ,GAAGa,iBAAiB,MAAQX,EAAQZ,UAAY,IACzEN,SAAQoB,QAAQQ,EAAY,SAAUE,GACpC,GAAIC,GAAY/B,QAAQgB,QAAQc,GAC5BE,EAAUD,EAAUd,KAAKC,EAAQZ,WAAW2B,QAAQ,IAAK,MACzDf,GAAQX,SACVyB,EAAU,IAAMA,EAAU,IAE5B,IAAIE,GAAS,GAAIC,QAAOH,GAAU,KAC9BE,GAAOE,KAAKT,GACdI,EAAUM,SAASnB,EAAQb,aAE3B0B,EAAUO,YAAYpB,EAAQb","file":"navbar.min.js","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.navbar', [])\n\n  .provider('$navbar', function() {\n\n    var defaults = this.defaults = {\n      activeClass: 'active',\n      routeAttr: 'data-match-route',\n      strict: false\n    };\n\n    this.$get = function() {\n      return {defaults: defaults};\n    };\n\n  })\n\n  .directive('bsNavbar', function($window, $location, $navbar) {\n\n    var defaults = $navbar.defaults;\n\n    return {\n      restrict: 'A',\n      link: function postLink(scope, element, attr, controller) {\n\n        // Directive options\n        var options = angular.copy(defaults);\n        angular.forEach(Object.keys(defaults), function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Watch for the $location\n        scope.$watch(function() {\n\n          return $location.path();\n\n        }, function(newValue, oldValue) {\n\n          var liElements = element[0].querySelectorAll('li[' + options.routeAttr + ']');\n\n          angular.forEach(liElements, function(li) {\n\n            var liElement = angular.element(li);\n            var pattern = liElement.attr(options.routeAttr).replace('/', '\\\\/');\n            if(options.strict) {\n              pattern = '^' + pattern + '$';\n            }\n            var regexp = new RegExp(pattern, ['i']);\n\n            if(regexp.test(newValue)) {\n              liElement.addClass(options.activeClass);\n            } else {\n              liElement.removeClass(options.activeClass);\n            }\n\n          });\n\n        });\n\n      }\n\n    };\n\n  });\n"],"sourceRoot":"/source/"}