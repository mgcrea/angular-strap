{"version":3,"sources":["scrollspy/scrollspy.js"],"names":["angular","module","provider","spies","this","$$spies","defaults","debounce","throttle","offset","$get","$window","$document","$rootScope","dimensions","nodeName","element","name","toLowerCase","ScrollSpyFactory","config","options","extend","bodyEl","isWindowSpy","scrollEl","windowEl","scrollId","id","$$count","unbindViewContentLoaded","unbindIncludeContentLoaded","activeTarget","debouncedCheckPosition","throttledCheckPosition","debouncedCheckOffsets","viewportHeight","scrollTop","$scrollspy","trackedElements","$trackedElements","sortedElements","init","checkPosition","on","checkPositionWithEventLoop","checkOffsets","$on","destroy","off","length","pageYOffset","prop","Math","max","innerHeight","docEl","offsetTop","target","$activateElement","i","isUndefined","setTimeout","activeElement","$getTrackedElement","source","removeClass","parent","addClass","filter","obj","forEach","trackedElement","targetElement","document","querySelector","top","el","sort","a","b","trackElement","push","untrackElement","toDelete","splice","activate","body","directive","restrict","link","scope","attr","key","isDefined","scrollspy","compile","children","querySelectorAll","child","childEl"],"mappings":"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","file":"scrollspy.min.js","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.scrollspy', ['mgcrea.ngStrap.helpers.debounce', 'mgcrea.ngStrap.helpers.dimensions'])\n\n  .provider('$scrollspy', function() {\n\n    // Pool of registered spies\n    var spies = this.$$spies = {};\n\n    var defaults = this.defaults = {\n      debounce: 150,\n      throttle: 100,\n      offset: 100\n    };\n\n    this.$get = function($window, $document, $rootScope, dimensions, debounce, throttle) {\n\n      var windowEl = angular.element($window);\n      var docEl = angular.element($document.prop('documentElement'));\n      var bodyEl = angular.element($window.document.body);\n\n      // Helper functions\n\n      function nodeName(element, name) {\n        return element[0].nodeName && element[0].nodeName.toLowerCase() === name.toLowerCase();\n      }\n\n      function ScrollSpyFactory(config) {\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        if(!options.element) options.element = bodyEl;\n        var isWindowSpy = nodeName(options.element, 'body');\n        var scrollEl = isWindowSpy ? windowEl : options.element;\n        var scrollId = isWindowSpy ? 'window' : options.id;\n\n        // Use existing spy\n        if(spies[scrollId]) {\n          spies[scrollId].$$count++;\n          return spies[scrollId];\n        }\n\n        var $scrollspy = {};\n\n        // Private vars\n        var unbindViewContentLoaded, unbindIncludeContentLoaded;\n        var trackedElements = $scrollspy.$trackedElements = [];\n        var sortedElements = [];\n        var activeTarget;\n        var debouncedCheckPosition;\n        var throttledCheckPosition;\n        var debouncedCheckOffsets;\n        var viewportHeight;\n        var scrollTop;\n\n        $scrollspy.init = function() {\n\n          // Setup internal ref counter\n          this.$$count = 1;\n\n          // Bind events\n          debouncedCheckPosition = debounce(this.checkPosition, options.debounce);\n          throttledCheckPosition = throttle(this.checkPosition, options.throttle);\n          scrollEl.on('click', this.checkPositionWithEventLoop);\n          windowEl.on('resize', debouncedCheckPosition);\n          scrollEl.on('scroll', throttledCheckPosition);\n\n          debouncedCheckOffsets = debounce(this.checkOffsets, options.debounce);\n          unbindViewContentLoaded = $rootScope.$on('$viewContentLoaded', debouncedCheckOffsets);\n          unbindIncludeContentLoaded = $rootScope.$on('$includeContentLoaded', debouncedCheckOffsets);\n          debouncedCheckOffsets();\n\n          // Register spy for reuse\n          if(scrollId) {\n            spies[scrollId] = $scrollspy;\n          }\n\n        };\n\n        $scrollspy.destroy = function() {\n\n          // Check internal ref counter\n          this.$$count--;\n          if(this.$$count > 0) {\n            return;\n          }\n\n          // Unbind events\n          scrollEl.off('click', this.checkPositionWithEventLoop);\n          windowEl.off('resize', debouncedCheckPosition);\n          scrollEl.off('scroll', debouncedCheckPosition);\n          unbindViewContentLoaded();\n          unbindIncludeContentLoaded();\n          if (scrollId) {\n            delete spies[scrollId];\n          }\n        };\n\n        $scrollspy.checkPosition = function() {\n\n          // Not ready yet\n          if(!sortedElements.length) return;\n\n          // Calculate the scroll position\n          scrollTop = (isWindowSpy ? $window.pageYOffset : scrollEl.prop('scrollTop')) || 0;\n\n          // Calculate the viewport height for use by the components\n          viewportHeight = Math.max($window.innerHeight, docEl.prop('clientHeight'));\n\n          // Activate first element if scroll is smaller\n          if(scrollTop < sortedElements[0].offsetTop && activeTarget !== sortedElements[0].target) {\n            return $scrollspy.$activateElement(sortedElements[0]);\n          }\n\n          // Activate proper element\n          for (var i = sortedElements.length; i--;) {\n            if(angular.isUndefined(sortedElements[i].offsetTop) || sortedElements[i].offsetTop === null) continue;\n            if(activeTarget === sortedElements[i].target) continue;\n            if(scrollTop < sortedElements[i].offsetTop) continue;\n            if(sortedElements[i + 1] && scrollTop > sortedElements[i + 1].offsetTop) continue;\n            return $scrollspy.$activateElement(sortedElements[i]);\n          }\n\n        };\n\n        $scrollspy.checkPositionWithEventLoop = function() {\n          setTimeout(this.checkPosition, 1);\n        };\n\n        // Protected methods\n\n        $scrollspy.$activateElement = function(element) {\n          if(activeTarget) {\n            var activeElement = $scrollspy.$getTrackedElement(activeTarget);\n            if(activeElement) {\n              activeElement.source.removeClass('active');\n              if(nodeName(activeElement.source, 'li') && nodeName(activeElement.source.parent().parent(), 'li')) {\n                activeElement.source.parent().parent().removeClass('active');\n              }\n            }\n          }\n          activeTarget = element.target;\n          element.source.addClass('active');\n          if(nodeName(element.source, 'li') && nodeName(element.source.parent().parent(), 'li')) {\n            element.source.parent().parent().addClass('active');\n          }\n        };\n\n        $scrollspy.$getTrackedElement = function(target) {\n          return trackedElements.filter(function(obj) {\n            return obj.target === target;\n          })[0];\n        };\n\n        // Track offsets behavior\n\n        $scrollspy.checkOffsets = function() {\n\n          angular.forEach(trackedElements, function(trackedElement) {\n            var targetElement = document.querySelector(trackedElement.target);\n            trackedElement.offsetTop = targetElement ? dimensions.offset(targetElement).top : null;\n            if(options.offset && trackedElement.offsetTop !== null) trackedElement.offsetTop -= options.offset * 1;\n          });\n\n          sortedElements = trackedElements\n          .filter(function(el) {\n            return el.offsetTop !== null;\n          })\n          .sort(function(a, b) {\n            return a.offsetTop - b.offsetTop;\n          });\n\n          debouncedCheckPosition();\n\n        };\n\n        $scrollspy.trackElement = function(target, source) {\n          trackedElements.push({target: target, source: source});\n        };\n\n        $scrollspy.untrackElement = function(target, source) {\n          var toDelete;\n          for (var i = trackedElements.length; i--;) {\n            if(trackedElements[i].target === target && trackedElements[i].source === source) {\n              toDelete = i;\n              break;\n            }\n          }\n          trackedElements = trackedElements.splice(toDelete, 1);\n        };\n\n        $scrollspy.activate = function(i) {\n          trackedElements[i].addClass('active');\n        };\n\n        // Initialize plugin\n\n        $scrollspy.init();\n        return $scrollspy;\n\n      }\n\n      return ScrollSpyFactory;\n\n    };\n\n  })\n\n  .directive('bsScrollspy', function($rootScope, debounce, dimensions, $scrollspy) {\n\n    return {\n      restrict: 'EAC',\n      link: function postLink(scope, element, attr) {\n\n        var options = {scope: scope};\n        angular.forEach(['offset', 'target'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        var scrollspy = $scrollspy(options);\n        scrollspy.trackElement(options.target, element);\n\n        scope.$on('$destroy', function() {\n          scrollspy.untrackElement(options.target, element);\n          scrollspy.destroy();\n          options = null;\n          scrollspy = null;\n        });\n\n      }\n    };\n\n  })\n\n\n  .directive('bsScrollspyList', function($rootScope, debounce, dimensions, $scrollspy) {\n\n    return {\n      restrict: 'A',\n      compile: function postLink(element, attr) {\n        var children = element[0].querySelectorAll('li > a[href]');\n        angular.forEach(children, function(child) {\n          var childEl = angular.element(child);\n          childEl.parent().attr('bs-scrollspy', '').attr('data-target', childEl.attr('href'));\n        });\n      }\n\n    };\n\n  });\n"],"sourceRoot":"/source/"}